name: go-core build
on: push
jobs:
  build:
    strategy:
      matrix:
        platform: [
          {os: ubuntu-latest, path: linux-x86_64},
          {os: windows-latest, path: windows-x86_64},
          {os: raspbian-private, path: linux-arm64},
          {os: macos-latest, path: darwin-x86_64},
        ]
    runs-on: ${{ matrix.platform.os }}
    steps:
    - name: Setup
      uses: actions/setup-go@v1
      with:
        go-version: 1.17.x
    - name: Checkout
      uses: actions/checkout@v1
    - name: Build
      run: |
        make all
        make test
    - name: Upload Gocore
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v2
      with:
        name: gocore-${{ matrix.platform.path }}
        path: ./build/bin/gocore*
    - name: Upload Dev Tools
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v2
      with:
        name: gocore-devtools-${{ matrix.platform.path }}
        path: |
          ./build/bin/*
          !./build/bin/gocore*
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Version
      id: version
      run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
    - name: Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        release_name: ${{ steps.version.outputs.tag }} gocore release
        draft: false
        prerelease: true
  artifacts:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux-x86_64, windows-x86_64, linux-arm64, darwin-x86_64]
    steps:
    - name: Checkout
      uses: actions/checkout@v1

      # Downloading assets from 1 step
    - name: Artifact Gocore
      uses: actions/download-artifact@v2
      with:
        name: gocore-${{ matrix.platform }}
        path: ./gocore-${{ matrix.platform }}
    - name: Artifact Gocore-Devtools
      uses: actions/download-artifact@v2
      with:
        name: gocore-devtools-${{ matrix.platform }}
        path: ./gocore-devtools-${{ matrix.platform }}

      # Zipping devtools
    - name: Zip Gocore-Devtools
      run: zip gocore-devtools-${{ matrix.platform }}.zip gocore-devtools-${{ matrix.platform }}/* -j

      # Uploading assets
    - name: Upload Gocore release assets (Linux and Mac)
      if: matrix.platform != 'windows-x86_64'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./gocore-${{ matrix.platform }}/gocore
        asset_name: gocore-${{ matrix.platform }}
        asset_content_type: application/octet-stream
    - name: Upload Gocore release assets (Windows)
      if: matrix.platform == 'windows-x86_64'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./gocore-${{ matrix.platform }}/gocore.exe
        asset_name: gocore-${{ matrix.platform }}.exe
        asset_content_type: application/octet-stream
    - name: Upload Gocore-Devtools release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./gocore-devtools-${{ matrix.platform }}.zip
        asset_name: gocore-devtools-${{ matrix.platform }}.zip
        asset_content_type: application/zip

    # Generating checksums
    - name: Generate gocore checksums (Linux and Mac)
      if: matrix.platform != 'windows-x86_64'
      working-directory: ./gocore-${{ matrix.platform }}
      run: |
        mv ./gocore ./gocore-${{ matrix.platform }}
        sha256sum gocore-${{ matrix.platform }} >gocore-${{ matrix.platform }}.checksum
    - name: Generate gocore checksums (Windows)
      if: matrix.platform == 'windows-x86_64'
      working-directory: ./gocore-${{ matrix.platform }}
      run: |
        mv ./gocore.exe ./gocore-${{ matrix.platform }}.exe
        sha256sum gocore-${{ matrix.platform }}.exe >gocore-${{ matrix.platform }}.exe.checksum
    - name: Generate gocore-devtools checksums
      run: sha256sum gocore-devtools-${{ matrix.platform }}.zip >gocore-devtools-${{ matrix.platform }}.zip.checksum

      # Uploading checksums
    - name: Upload Gocore release assets checksums (Linux and Mac)
      if: matrix.platform != 'windows-x86_64'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./gocore-${{ matrix.platform }}/gocore-${{ matrix.platform }}.checksum
        asset_name: gocore-${{ matrix.platform }}.checksum
        asset_content_type: text/plain
    - name: Upload Gocore release assets checksums (Windows)
      if: matrix.platform == 'windows-x86_64'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./gocore-${{ matrix.platform }}/gocore-${{ matrix.platform }}.exe.checksum
        asset_name: gocore-${{ matrix.platform }}.exe.checksum
        asset_content_type: text/plain
    - name: Upload Gocore-Devtools release assets checksums
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./gocore-devtools-${{ matrix.platform }}.zip.checksum
        asset_name: gocore-devtools-${{ matrix.platform }}.zip.checksum
        asset_content_type: text/plain
