name: go-core build
on: push
jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23
    - name: Setup MSYS
      uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        update: true
        install: >
          git
          base-devel
          autoconf-wrapper
          autoconf
          automake
          libtool
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-go
    - name: Build Windows
      run: |
        make gocore
        make test
    - name: Upload Gocore
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v3
      with:
        name: gocore-windows-x86_64
        path: ./build/bin/gocore*

  build-mac:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {os: macos-13, path: darwin-x86_64}
          - {os: macos-latest, path: darwin-arm64}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23
    - name: Build & Test
      run: |
        make gocore
        make test
    - name: Upload Gocore
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v3
      with:
        name: gocore-${{ matrix.config.path }}
        path: ./build/bin/gocore*

  build-alpine:
    strategy:
      matrix:
        config:
          - {arch: x86_64, branch: latest-stable}
          - {arch: aarch64, branch: latest-stable}
          - {arch: riscv64, branch: edge}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Alpine Linux
      uses: jirutka/setup-alpine@v1
      with:
        arch: ${{ matrix.config.arch }}
        branch: ${{ matrix.config.branch }}
    - name: Install deps
      shell: alpine.sh --root {0}
      run: apk add git cmake gcc g++ make go
    - name: Build & Test
      run: |
        make gocore
        make test
    - name: Upload Gocore
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v3
      with:
        name: gocore-linux-${{ matrix.config.arch }}
        path: ./build/bin/gocore*

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-windows, build-mac, build-alpine]
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Version
      id: version
      run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
    - name: Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        release_name: ${{ steps.version.outputs.tag }} gocore release
        draft: false
        prerelease: true

  artifacts:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [
          {path: linux-x86_64, file_ext: ""},
          {path: windows-x86_64, file_ext: ".exe"},
          {path: linux-aarch64, file_ext: ""},
          {path: linux-riscv64, file_ext: ""},
          {path: darwin-x86_64, file_ext: ""},
          {path: darwin-arm64, file_ext: ""},
        ]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Artifact Gocore
      uses: actions/download-artifact@v2
      with:
        name: gocore-${{ matrix.platform.path}}
        path: ./gocore-${{ matrix.platform.path }}
    - name: Upload Gocore release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./gocore-${{ matrix.platform.path }}/gocore${{matrix.platform.file_ext}}
        asset_name: gocore-${{ matrix.platform.path }}${{matrix.platform.file_ext}}
        asset_content_type: application/octet-stream
    - name: Generate gocore checksums
      working-directory: ./gocore-${{ matrix.platform.path }}
      run: |
        mv ./gocore${{matrix.platform.file_ext}} ./gocore-${{ matrix.platform.path }}${{matrix.platform.file_ext}}
        sha256sum gocore-${{ matrix.platform.path }}${{matrix.platform.file_ext}} >gocore-${{ matrix.platform.path }}${{matrix.platform.file_ext}}.checksum
    - name: Upload Gocore release assets checksums (Linux and Mac)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./gocore-${{ matrix.platform.path }}/gocore-${{ matrix.platform.path }}${{matrix.platform.file_ext}}.checksum
        asset_name: gocore-${{ matrix.platform.path }}${{matrix.platform.file_ext}}.checksum
        asset_content_type: text/plain
