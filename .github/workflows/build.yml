name: go-core build
on: [push, pull_request]
jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Setup
      uses: actions/setup-go@v1
      with:
        go-version: 1.14.x
      id: go
    - name: Checkout
      uses: actions/checkout@v1
    - name: Build
      run: go run build/ci.go install
    - name: Test
      if: false
      run: go run build/ci.go test
  debian:
    name: debian
    #if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: import key
      run: |
        mkdir -p ~/.gnupg/
        printf "$GPG_SIGNING_KEY" | base64 --decode > ~/.gnupg/private.key
        gpg --import ~/.gnupg/private.key
      env:
        GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
    - name: setup debuild
      run: sudo apt-get install build-essential fakeroot devscripts dh-make
    - name: run debuild
      run: sudo go run build/ci.go debsrc -goversion 1.14.6 -signer "core-coin robot <sashaz@corecoin.cc>" -upload core-coin/gocore  
  docker:
    name: docker
    #if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build, debian]
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Get the version
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
    - name: docker login
      run: docker login docker.pkg.github.com -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
    - name: docker build
      run: docker build . -f Dockerfile -t docker.pkg.github.com/core-coin/go-core/gocore:${{steps.vars.outputs.tag}} -t docker.pkg.github.com/core-coin/go-core/gocore:latest
    - name: docker push
      run: docker push docker.pkg.github.com/core-coin/go-core/gocore
