name: go-core build
on: push
jobs:
  build:
    strategy:
      matrix:
        platform: [{os: ubuntu-latest, path: linux-x86_64},
                   {os: windows-latest, path: windows-x86_64},
                   {os: raspbian-private, path: linux-arm64},
                   {os: macos-latest, path:darwin-x86_64}]
    runs-on: ${{ matrix.platform.os }}
    steps:
    - name: Setup
      uses: actions/setup-go@v1
      with:
        go-version: 1.17.x
    - name: Checkout
      uses: actions/checkout@v1
    - name: Build
      run: make gocore
    - name: Test
      run: make test
    - name: Zip
      run: zip -j ${{ matrix.platform.path }}.zip build/bin
    - name: Upload
      #if: github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.platform.path }}
        path: ${{ matirx.platform.path }}.zip
  release:
    #if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Version
      id: version_bump
      uses: anothrNick/github-tag-action@1.13.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: "patch"
        RELEASE_BRANCHES: "master"
        WITH_V: true
    - name: Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version_bump.outputs.tag }}
        release_name: go-core release ${{ steps.version_bump.outputs.tag }}
        draft: false
        prerelease: true
  artifact:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux-x86_64, windows-x86_64, linux-arm64, darwin-x86_64]
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.platform }}
        path: ${{ matrix.platform }}.zip
    - name: Artifact
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ${{ matrix.platform }}.zip
        asset_name: ${{ matrix.platform }}.zip
        asset_content_type: application/zip
