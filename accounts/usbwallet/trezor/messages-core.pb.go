// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages-core.proto

package trezor

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// Request: Ask device for public key corresponding to address_n path
// @start
// @next CorePublicKey
// @next Failure
type CoreGetPublicKey struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	ShowDisplay          *bool    `protobuf:"varint,2,opt,name=show_display,json=showDisplay" json:"show_display,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreGetPublicKey) Reset()         { *m = CoreGetPublicKey{} }
func (m *CoreGetPublicKey) String() string { return proto.CompactTextString(m) }
func (*CoreGetPublicKey) ProtoMessage()    {}
func (*CoreGetPublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb33f46ba915f15c, []int{0}
}

func (m *CoreGetPublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreGetPublicKey.Unmarshal(m, b)
}
func (m *CoreGetPublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreGetPublicKey.Marshal(b, m, deterministic)
}
func (m *CoreGetPublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreGetPublicKey.Merge(m, src)
}
func (m *CoreGetPublicKey) XXX_Size() int {
	return xxx_messageInfo_CoreGetPublicKey.Size(m)
}
func (m *CoreGetPublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreGetPublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_CoreGetPublicKey proto.InternalMessageInfo

func (m *CoreGetPublicKey) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *CoreGetPublicKey) GetShowDisplay() bool {
	if m != nil && m.ShowDisplay != nil {
		return *m.ShowDisplay
	}
	return false
}

//*
// Response: Contains public key derived from device private seed
// @end
type CorePublicKey struct {
	Node                 *HDNodeType `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	Xpub                 *string     `protobuf:"bytes,2,opt,name=xpub" json:"xpub,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CorePublicKey) Reset()         { *m = CorePublicKey{} }
func (m *CorePublicKey) String() string { return proto.CompactTextString(m) }
func (*CorePublicKey) ProtoMessage()    {}
func (*CorePublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb33f46ba915f15c, []int{1}
}

func (m *CorePublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CorePublicKey.Unmarshal(m, b)
}
func (m *CorePublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CorePublicKey.Marshal(b, m, deterministic)
}
func (m *CorePublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CorePublicKey.Merge(m, src)
}
func (m *CorePublicKey) XXX_Size() int {
	return xxx_messageInfo_CorePublicKey.Size(m)
}
func (m *CorePublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_CorePublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_CorePublicKey proto.InternalMessageInfo

func (m *CorePublicKey) GetNode() *HDNodeType {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *CorePublicKey) GetXpub() string {
	if m != nil && m.Xpub != nil {
		return *m.Xpub
	}
	return ""
}

//*
// Request: Ask device for Core address corresponding to address_n path
// @start
// @next CoreAddress
// @next Failure
type CoreGetAddress struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	ShowDisplay          *bool    `protobuf:"varint,2,opt,name=show_display,json=showDisplay" json:"show_display,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreGetAddress) Reset()         { *m = CoreGetAddress{} }
func (m *CoreGetAddress) String() string { return proto.CompactTextString(m) }
func (*CoreGetAddress) ProtoMessage()    {}
func (*CoreGetAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb33f46ba915f15c, []int{2}
}

func (m *CoreGetAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreGetAddress.Unmarshal(m, b)
}
func (m *CoreGetAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreGetAddress.Marshal(b, m, deterministic)
}
func (m *CoreGetAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreGetAddress.Merge(m, src)
}
func (m *CoreGetAddress) XXX_Size() int {
	return xxx_messageInfo_CoreGetAddress.Size(m)
}
func (m *CoreGetAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreGetAddress.DiscardUnknown(m)
}

var xxx_messageInfo_CoreGetAddress proto.InternalMessageInfo

func (m *CoreGetAddress) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *CoreGetAddress) GetShowDisplay() bool {
	if m != nil && m.ShowDisplay != nil {
		return *m.ShowDisplay
	}
	return false
}

//*
// Response: Contains an Core address derived from device private seed
// @end
type CoreAddress struct {
	AddressBin           []byte   `protobuf:"bytes,1,opt,name=addressBin" json:"addressBin,omitempty"`
	AddressHex           *string  `protobuf:"bytes,2,opt,name=addressHex" json:"addressHex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreAddress) Reset()         { *m = CoreAddress{} }
func (m *CoreAddress) String() string { return proto.CompactTextString(m) }
func (*CoreAddress) ProtoMessage()    {}
func (*CoreAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb33f46ba915f15c, []int{3}
}

func (m *CoreAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreAddress.Unmarshal(m, b)
}
func (m *CoreAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreAddress.Marshal(b, m, deterministic)
}
func (m *CoreAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreAddress.Merge(m, src)
}
func (m *CoreAddress) XXX_Size() int {
	return xxx_messageInfo_CoreAddress.Size(m)
}
func (m *CoreAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreAddress.DiscardUnknown(m)
}

var xxx_messageInfo_CoreAddress proto.InternalMessageInfo

func (m *CoreAddress) GetAddressBin() []byte {
	if m != nil {
		return m.AddressBin
	}
	return nil
}

func (m *CoreAddress) GetAddressHex() string {
	if m != nil && m.AddressHex != nil {
		return *m.AddressHex
	}
	return ""
}

//*
// Request: Ask device to sign transaction
// All fields are optional from the protocol's point of view. Each field defaults to value `0` if missing.
// Note: the first at most 1024 bytes of data MUST be transmitted as part of this message.
// @start
// @next CoreTxRequest
// @next Failure
type CoreSignTx struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	Nonce                []byte   `protobuf:"bytes,2,opt,name=nonce" json:"nonce,omitempty"`
	EnergyPrice             []byte   `protobuf:"bytes,3,opt,name=energy_price,json=energyPrice" json:"energy_price,omitempty"`
	EnergyLimit             []byte   `protobuf:"bytes,4,opt,name=energy_limit,json=energyLimit" json:"energy_limit,omitempty"`
	ToBin                []byte   `protobuf:"bytes,5,opt,name=toBin" json:"toBin,omitempty"`
	ToHex                *string  `protobuf:"bytes,11,opt,name=toHex" json:"toHex,omitempty"`
	Value                []byte   `protobuf:"bytes,6,opt,name=value" json:"value,omitempty"`
	DataInitialChunk     []byte   `protobuf:"bytes,7,opt,name=data_initial_chunk,json=dataInitialChunk" json:"data_initial_chunk,omitempty"`
	DataLength           *uint32  `protobuf:"varint,8,opt,name=data_length,json=dataLength" json:"data_length,omitempty"`
	ChainId              *uint32  `protobuf:"varint,9,opt,name=chain_id,json=chainId" json:"chain_id,omitempty"`
	TxType               *uint32  `protobuf:"varint,10,opt,name=tx_type,json=txType" json:"tx_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreSignTx) Reset()         { *m = CoreSignTx{} }
func (m *CoreSignTx) String() string { return proto.CompactTextString(m) }
func (*CoreSignTx) ProtoMessage()    {}
func (*CoreSignTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb33f46ba915f15c, []int{4}
}

func (m *CoreSignTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreSignTx.Unmarshal(m, b)
}
func (m *CoreSignTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreSignTx.Marshal(b, m, deterministic)
}
func (m *CoreSignTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreSignTx.Merge(m, src)
}
func (m *CoreSignTx) XXX_Size() int {
	return xxx_messageInfo_CoreSignTx.Size(m)
}
func (m *CoreSignTx) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreSignTx.DiscardUnknown(m)
}

var xxx_messageInfo_CoreSignTx proto.InternalMessageInfo

func (m *CoreSignTx) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *CoreSignTx) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *CoreSignTx) GetEnergyPrice() []byte {
	if m != nil {
		return m.EnergyPrice
	}
	return nil
}

func (m *CoreSignTx) GetEnergyLimit() []byte {
	if m != nil {
		return m.EnergyLimit
	}
	return nil
}

func (m *CoreSignTx) GetToBin() []byte {
	if m != nil {
		return m.ToBin
	}
	return nil
}

func (m *CoreSignTx) GetToHex() string {
	if m != nil && m.ToHex != nil {
		return *m.ToHex
	}
	return ""
}

func (m *CoreSignTx) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *CoreSignTx) GetDataInitialChunk() []byte {
	if m != nil {
		return m.DataInitialChunk
	}
	return nil
}

func (m *CoreSignTx) GetDataLength() uint32 {
	if m != nil && m.DataLength != nil {
		return *m.DataLength
	}
	return 0
}

func (m *CoreSignTx) GetChainId() uint32 {
	if m != nil && m.ChainId != nil {
		return *m.ChainId
	}
	return 0
}

func (m *CoreSignTx) GetTxType() uint32 {
	if m != nil && m.TxType != nil {
		return *m.TxType
	}
	return 0
}

//*
// Response: Device asks for more data from transaction payload, or returns the signature.
// If data_length is set, device awaits that many more bytes of payload.
// Otherwise, the signature_* fields contain the computed transaction signature. All three fields will be present.
// @end
// @next CoreTxAck
type CoreTxRequest struct {
	DataLength           *uint32  `protobuf:"varint,1,opt,name=data_length,json=dataLength" json:"data_length,omitempty"`
	SignatureV           *uint32  `protobuf:"varint,2,opt,name=signature_v,json=signatureV" json:"signature_v,omitempty"`
	SignatureR           []byte   `protobuf:"bytes,3,opt,name=signature_r,json=signatureR" json:"signature_r,omitempty"`
	SignatureS           []byte   `protobuf:"bytes,4,opt,name=signature_s,json=signatureS" json:"signature_s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreTxRequest) Reset()         { *m = CoreTxRequest{} }
func (m *CoreTxRequest) String() string { return proto.CompactTextString(m) }
func (*CoreTxRequest) ProtoMessage()    {}
func (*CoreTxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb33f46ba915f15c, []int{5}
}

func (m *CoreTxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreTxRequest.Unmarshal(m, b)
}
func (m *CoreTxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreTxRequest.Marshal(b, m, deterministic)
}
func (m *CoreTxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreTxRequest.Merge(m, src)
}
func (m *CoreTxRequest) XXX_Size() int {
	return xxx_messageInfo_CoreTxRequest.Size(m)
}
func (m *CoreTxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreTxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CoreTxRequest proto.InternalMessageInfo

func (m *CoreTxRequest) GetDataLength() uint32 {
	if m != nil && m.DataLength != nil {
		return *m.DataLength
	}
	return 0
}

func (m *CoreTxRequest) GetSignatureV() uint32 {
	if m != nil && m.SignatureV != nil {
		return *m.SignatureV
	}
	return 0
}

func (m *CoreTxRequest) GetSignatureR() []byte {
	if m != nil {
		return m.SignatureR
	}
	return nil
}

func (m *CoreTxRequest) GetSignatureS() []byte {
	if m != nil {
		return m.SignatureS
	}
	return nil
}

//*
// Request: Transaction payload data.
// @next CoreTxRequest
type CoreTxAck struct {
	DataChunk            []byte   `protobuf:"bytes,1,opt,name=data_chunk,json=dataChunk" json:"data_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreTxAck) Reset()         { *m = CoreTxAck{} }
func (m *CoreTxAck) String() string { return proto.CompactTextString(m) }
func (*CoreTxAck) ProtoMessage()    {}
func (*CoreTxAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb33f46ba915f15c, []int{6}
}

func (m *CoreTxAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreTxAck.Unmarshal(m, b)
}
func (m *CoreTxAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreTxAck.Marshal(b, m, deterministic)
}
func (m *CoreTxAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreTxAck.Merge(m, src)
}
func (m *CoreTxAck) XXX_Size() int {
	return xxx_messageInfo_CoreTxAck.Size(m)
}
func (m *CoreTxAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreTxAck.DiscardUnknown(m)
}

var xxx_messageInfo_CoreTxAck proto.InternalMessageInfo

func (m *CoreTxAck) GetDataChunk() []byte {
	if m != nil {
		return m.DataChunk
	}
	return nil
}

//*
// Request: Ask device to sign message
// @start
// @next CoreMessageSignature
// @next Failure
type CoreSignMessage struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	Message              []byte   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreSignMessage) Reset()         { *m = CoreSignMessage{} }
func (m *CoreSignMessage) String() string { return proto.CompactTextString(m) }
func (*CoreSignMessage) ProtoMessage()    {}
func (*CoreSignMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb33f46ba915f15c, []int{7}
}

func (m *CoreSignMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreSignMessage.Unmarshal(m, b)
}
func (m *CoreSignMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreSignMessage.Marshal(b, m, deterministic)
}
func (m *CoreSignMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreSignMessage.Merge(m, src)
}
func (m *CoreSignMessage) XXX_Size() int {
	return xxx_messageInfo_CoreSignMessage.Size(m)
}
func (m *CoreSignMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreSignMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CoreSignMessage proto.InternalMessageInfo

func (m *CoreSignMessage) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *CoreSignMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

//*
// Response: Signed message
// @end
type CoreMessageSignature struct {
	AddressBin           []byte   `protobuf:"bytes,1,opt,name=addressBin" json:"addressBin,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	AddressHex           *string  `protobuf:"bytes,3,opt,name=addressHex" json:"addressHex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreMessageSignature) Reset()         { *m = CoreMessageSignature{} }
func (m *CoreMessageSignature) String() string { return proto.CompactTextString(m) }
func (*CoreMessageSignature) ProtoMessage()    {}
func (*CoreMessageSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb33f46ba915f15c, []int{8}
}

func (m *CoreMessageSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreMessageSignature.Unmarshal(m, b)
}
func (m *CoreMessageSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreMessageSignature.Marshal(b, m, deterministic)
}
func (m *CoreMessageSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreMessageSignature.Merge(m, src)
}
func (m *CoreMessageSignature) XXX_Size() int {
	return xxx_messageInfo_CoreMessageSignature.Size(m)
}
func (m *CoreMessageSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreMessageSignature.DiscardUnknown(m)
}

var xxx_messageInfo_CoreMessageSignature proto.InternalMessageInfo

func (m *CoreMessageSignature) GetAddressBin() []byte {
	if m != nil {
		return m.AddressBin
	}
	return nil
}

func (m *CoreMessageSignature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *CoreMessageSignature) GetAddressHex() string {
	if m != nil && m.AddressHex != nil {
		return *m.AddressHex
	}
	return ""
}

//*
// Request: Ask device to verify message
// @start
// @next Success
// @next Failure
type CoreVerifyMessage struct {
	AddressBin           []byte   `protobuf:"bytes,1,opt,name=addressBin" json:"addressBin,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	Message              []byte   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	AddressHex           *string  `protobuf:"bytes,4,opt,name=addressHex" json:"addressHex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreVerifyMessage) Reset()         { *m = CoreVerifyMessage{} }
func (m *CoreVerifyMessage) String() string { return proto.CompactTextString(m) }
func (*CoreVerifyMessage) ProtoMessage()    {}
func (*CoreVerifyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb33f46ba915f15c, []int{9}
}

func (m *CoreVerifyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreVerifyMessage.Unmarshal(m, b)
}
func (m *CoreVerifyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreVerifyMessage.Marshal(b, m, deterministic)
}
func (m *CoreVerifyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreVerifyMessage.Merge(m, src)
}
func (m *CoreVerifyMessage) XXX_Size() int {
	return xxx_messageInfo_CoreVerifyMessage.Size(m)
}
func (m *CoreVerifyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreVerifyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CoreVerifyMessage proto.InternalMessageInfo

func (m *CoreVerifyMessage) GetAddressBin() []byte {
	if m != nil {
		return m.AddressBin
	}
	return nil
}

func (m *CoreVerifyMessage) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *CoreVerifyMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *CoreVerifyMessage) GetAddressHex() string {
	if m != nil && m.AddressHex != nil {
		return *m.AddressHex
	}
	return ""
}

func init() {
	proto.RegisterType((*CoreGetPublicKey)(nil), "hw.trezor.messages.core.CoreGetPublicKey")
	proto.RegisterType((*CorePublicKey)(nil), "hw.trezor.messages.core.CorePublicKey")
	proto.RegisterType((*CoreGetAddress)(nil), "hw.trezor.messages.core.CoreGetAddress")
	proto.RegisterType((*CoreAddress)(nil), "hw.trezor.messages.core.CoreAddress")
	proto.RegisterType((*CoreSignTx)(nil), "hw.trezor.messages.core.CoreSignTx")
	proto.RegisterType((*CoreTxRequest)(nil), "hw.trezor.messages.core.CoreTxRequest")
	proto.RegisterType((*CoreTxAck)(nil), "hw.trezor.messages.core.CoreTxAck")
	proto.RegisterType((*CoreSignMessage)(nil), "hw.trezor.messages.core.CoreSignMessage")
	proto.RegisterType((*CoreMessageSignature)(nil), "hw.trezor.messages.core.CoreMessageSignature")
	proto.RegisterType((*CoreVerifyMessage)(nil), "hw.trezor.messages.core.CoreVerifyMessage")
}

func init() { proto.RegisterFile("messages-core.proto", fileDescriptor_cb33f46ba915f15c) }

var fileDescriptor_cb33f46ba915f15c = []byte{
	// 593 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0x9b, 0xb4, 0x49, 0x26, 0x0d, 0x1f, 0xa6, 0x55, 0x17, 0x0a, 0x34, 0x18, 0x21, 0xe5,
	0x00, 0x3e, 0x70, 0x43, 0xe2, 0xd2, 0x52, 0x44, 0x2b, 0x4a, 0x55, 0xdc, 0xa8, 0x57, 0x6b, 0x63,
	0x6f, 0xe3, 0x55, 0x9d, 0xdd, 0xe0, 0x5d, 0xb7, 0x0e, 0x7f, 0x82, 0x23, 0xff, 0x87, 0x5f, 0x86,
	0xf6, 0x2b, 0x71, 0x52, 0x54, 0x0e, 0xbd, 0x65, 0xde, 0xbc, 0x7d, 0xf3, 0x66, 0xf4, 0x62, 0xd8,
	0x99, 0x10, 0x21, 0xf0, 0x98, 0x88, 0x77, 0x44, 0x66, 0xa4, 0x20, 0xe5, 0x24, 0x9c, 0x16, 0x5c,
	0x72, 0x7f, 0x37, 0xbb, 0x09, 0x65, 0x41, 0x7e, 0xf2, 0x22, 0x74, 0x94, 0xd0, 0x51, 0x9e, 0x6d,
	0xcf, 0x5f, 0x25, 0x7c, 0x32, 0xe1, 0xcc, 0xbc, 0x09, 0x2e, 0x60, 0xeb, 0xb3, 0xa5, 0x7c, 0x21,
	0xf2, 0xac, 0x1c, 0xe5, 0x34, 0xf9, 0x4a, 0x66, 0xfe, 0x2e, 0x74, 0x70, 0x9a, 0x16, 0x44, 0x88,
	0x98, 0x21, 0xaf, 0xdf, 0x18, 0xf4, 0xa2, 0xb6, 0x05, 0x4e, 0xfd, 0x57, 0xb0, 0x29, 0x32, 0x7e,
	0x13, 0xa7, 0x54, 0x4c, 0x73, 0x3c, 0x43, 0x6b, 0x7d, 0x6f, 0xd0, 0x8e, 0xba, 0x0a, 0x3b, 0x34,
	0x50, 0x30, 0x82, 0xc7, 0x4e, 0x77, 0x21, 0xfa, 0x01, 0x9a, 0x8c, 0xa7, 0x04, 0x79, 0x7d, 0x6f,
	0xd0, 0x7d, 0xff, 0x26, 0xfc, 0x87, 0x5f, 0x6b, 0xee, 0xe8, 0xf0, 0x94, 0xa7, 0x64, 0x38, 0x9b,
	0x92, 0x48, 0x3f, 0xf1, 0x7d, 0x68, 0x56, 0xd3, 0x72, 0xa4, 0x47, 0x75, 0x22, 0xfd, 0x3b, 0x18,
	0x82, 0x5f, 0xf3, 0xbe, 0x6f, 0xdc, 0xdd, 0xdb, 0xf9, 0x77, 0x78, 0xe8, 0x54, 0x9d, 0xe4, 0x4b,
	0x00, 0xab, 0x70, 0x40, 0x99, 0x76, 0xbf, 0x19, 0xd5, 0x90, 0x5a, 0xff, 0x88, 0x54, 0xd6, 0x62,
	0x0d, 0x09, 0xfe, 0xac, 0xc1, 0x03, 0xa7, 0x79, 0x4e, 0xc7, 0x6c, 0x58, 0xdd, 0xed, 0x72, 0x0b,
	0xd6, 0x19, 0x67, 0x09, 0xd1, 0x52, 0x9b, 0x91, 0x29, 0xd4, 0x93, 0x31, 0x16, 0xf1, 0xb4, 0xa0,
	0x09, 0x41, 0x0d, 0xdd, 0x69, 0x8f, 0xb1, 0x38, 0x53, 0xb5, 0x6b, 0xe6, 0x74, 0x42, 0x25, 0x6a,
	0xce, 0x9b, 0x27, 0xaa, 0x56, 0x7a, 0x92, 0x2b, 0xeb, 0xeb, 0x46, 0x4f, 0x17, 0x06, 0x55, 0x86,
	0xbb, 0xda, 0xb0, 0x29, 0x14, 0x7a, 0x8d, 0xf3, 0x92, 0xa0, 0x0d, 0xc3, 0xd5, 0x85, 0xff, 0x16,
	0xfc, 0x14, 0x4b, 0x1c, 0x53, 0x46, 0x25, 0xc5, 0x79, 0x9c, 0x64, 0x25, 0xbb, 0x42, 0x2d, 0x4d,
	0x79, 0xa4, 0x3a, 0xc7, 0xa6, 0xf1, 0x49, 0xe1, 0xfe, 0x1e, 0x74, 0x35, 0x3b, 0x27, 0x6c, 0x2c,
	0x33, 0xd4, 0xee, 0x7b, 0x83, 0x5e, 0x04, 0x0a, 0x3a, 0xd1, 0x88, 0xff, 0x14, 0xda, 0x49, 0x86,
	0x29, 0x8b, 0x69, 0x8a, 0x3a, 0xba, 0xdb, 0xd2, 0xf5, 0x71, 0xea, 0xef, 0x40, 0x4b, 0x56, 0xb1,
	0x9c, 0x4d, 0x09, 0x02, 0xdd, 0xd9, 0x90, 0x95, 0xca, 0x41, 0xf0, 0xdb, 0x5b, 0x44, 0x6a, 0x58,
	0x45, 0xe4, 0x47, 0x49, 0x84, 0x5c, 0x1d, 0xe5, 0xdd, 0x1a, 0xb5, 0x07, 0x5d, 0x41, 0xc7, 0x0c,
	0xcb, 0xb2, 0x20, 0xf1, 0xb5, 0xbe, 0x68, 0x2f, 0x82, 0x39, 0x74, 0xb1, 0x4c, 0x28, 0xec, 0x61,
	0x17, 0x84, 0x68, 0x99, 0x20, 0xec, 0x71, 0x17, 0x84, 0xf3, 0x20, 0x84, 0xde, 0xc2, 0xd8, 0x7e,
	0x72, 0xe5, 0xbf, 0x00, 0xed, 0xc0, 0x5e, 0xc9, 0xe4, 0xa5, 0xa3, 0x10, 0x7d, 0x9e, 0xe0, 0x04,
	0x9e, 0xd4, 0xd3, 0xf0, 0xcd, 0x64, 0xff, 0xee, 0x48, 0x20, 0x68, 0xd9, 0xff, 0x88, 0x0d, 0x85,
	0x2b, 0x83, 0x0a, 0x90, 0x53, 0xb3, 0x4a, 0xe7, 0xce, 0xda, 0x7f, 0x83, 0xfb, 0x1c, 0x3a, 0xf3,
	0x3d, 0xac, 0xee, 0x02, 0x58, 0x89, 0x75, 0xe3, 0x56, 0xac, 0x7f, 0x79, 0xb0, 0xed, 0x46, 0x5f,
	0x90, 0x82, 0x5e, 0xce, 0xdc, 0x2a, 0xf7, 0x9b, 0x5b, 0xdb, 0xb5, 0xb1, 0xb4, 0xeb, 0x8a, 0xa3,
	0xe6, 0xaa, 0xa3, 0x83, 0x8f, 0xf0, 0x3a, 0xe1, 0x93, 0x50, 0x60, 0xc9, 0x45, 0x46, 0x73, 0x3c,
	0x12, 0xee, 0x03, 0x93, 0xd3, 0x91, 0xf9, 0xe2, 0x8d, 0xca, 0xcb, 0x83, 0xed, 0xa1, 0x06, 0xad,
	0x5b, 0xb7, 0xc2, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8a, 0xce, 0x81, 0xc8, 0x59, 0x05, 0x00,
	0x00,
}
