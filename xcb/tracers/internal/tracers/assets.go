// Code generated by go-bindata. DO NOT EDIT.
// sources:
// 4byte_tracer.js (2.914kB)
// bigram_tracer.js (1.687kB)
// call_tracer.js (8.946kB)
// evmdis_tracer.js (4.176kB)
// noop_tracer.js (1.246kB)
// opcount_tracer.js (1.347kB)
// prestate_tracer.js (4.209kB)
// trigram_tracer.js (1.763kB)
// unigram_tracer.js (1.485kB)

package tracers

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __4byte_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4b\x6f\xe3\x38\x12\x3e\xdb\xbf\xa2\xd6\x97\xb6\xd1\xb2\x1c\x3f\x12\x3f\xb2\xdd\x80\x37\x93\xee\x0e\x90\x49\x82\xd8\xbd\x83\xc6\x62\x0f\x34\x59\xb2\xb8\x91\x49\x81\x2c\xf9\xd1\x99\xfc\xf7\x45\x51\x52\xe2\x64\x32\x98\xdd\x93\x24\xaa\xea\xab\xd7\x57\x55\xec\xf5\xe0\xc2\xe6\x07\xa7\xd7\x29\xc1\xe0\xa4\x3f\x86\xd5\x01\x28\x45\x98\x17\x94\x5a\xe7\x9b\xbd\x1e\x2c\x53\xed\x21\xd1\x19\x82\xf6\x90\x0b\x47\x60\x93\x20\xb3\xb6\x5d\x69\x1d\x42\xa6\x57\x4e\xb8\x43\xdc\xec\xf5\x4a\xf9\x3f\xfc\x62\xcd\xc4\x21\x82\xb7\x09\xed\x84\xc3\x19\x1c\x6c\x01\x52\x18\x70\xa8\xb4\x27\xa7\x57\x05\x21\x68\x02\x61\x54\xcf\x3a\xd8\x58\xa5\x93\x03\xc3\x69\x82\xc2\x28\x74\xc1\x24\xa1\xdb\xf8\xda\xfe\xd7\x9b\xef\x70\x8d\xde\xa3\x83\xaf\x68\xd0\x89\x0c\xee\x8a\x55\xa6\x25\x5c\x6b\x89\xc6\x23\x08\x0f\x39\x9f\xf8\x14\x15\xac\x02\x1c\x2b\x7e\x61\x57\x16\x95\x2b\xf0\xc5\x16\x46\x09\xd2\xd6\x44\x80\x9a\x52\x74\xb0\x45\xe7\xb5\x35\x30\xac\x4d\x55\x80\x11\x58\xc7\x20\x6d\x41\x1c\x80\x03\x9b\xb3\x5e\x07\x84\x39\x40\x26\xe8\x45\xf5\x2f\x92\xf1\x12\xb3\x02\x6d\x82\x89\xd4\xe6\x08\x94\x0a\xe2\x88\x77\x3a\xcb\x60\x85\x50\x78\x4c\x8a\x2c\x62\xa4\x55\x41\xf0\xdb\xd5\xf2\xdb\xed\xf7\x25\xcc\x6f\x7e\xc0\x6f\xf3\xfb\xfb\xf9\xcd\xf2\xc7\x39\xec\x34\xa5\xb6\x20\xc0\x2d\x96\x50\x7a\x93\x67\x1a\x15\xec\x84\x73\xc2\xd0\x01\x6c\xc2\x08\xbf\x5e\xde\x5f\x7c\x9b\xdf\x2c\xe7\xff\xb8\xba\xbe\x5a\xfe\x00\xeb\xe0\xcb\xd5\xf2\xe6\x72\xb1\x80\x2f\xb7\xf7\x30\x87\xbb\xf9\xfd\xf2\xea\xe2\xfb\xf5\xfc\x1e\xee\xbe\xdf\xdf\xdd\x2e\x2e\x63\x58\x20\x7b\x85\xac\xff\xd7\xf9\x4e\x42\xe5\x1c\x82\x42\x12\x3a\xf3\x75\x16\x7e\xd8\x02\x7c\x6a\x8b\x4c\x41\x2a\xb6\x08\x0e\x25\xea\x2d\x2a\x10\x20\x6d\x7e\xf8\x9f\x0b\xca\x58\x22\xb3\x66\x1d\x62\x7e\x97\x84\x70\x95\x80\xb1\x14\x81\x47\x84\xbf\xa7\x44\xf9\xac\xd7\xdb\xed\x76\xf1\xda\x14\xb1\x75\xeb\x5e\x56\x42\xf9\xde\xe7\xb8\xc9\x78\xa3\xd5\x81\x70\xe9\x84\x44\x07\x1e\x85\x93\x29\xfa\x10\x48\xf8\xd1\xd5\x0a\x0d\xe9\x44\xa3\xf3\x11\x93\x13\xa4\xcd\x32\x94\xe4\xd9\xfa\x26\x08\xe6\xd6\x53\x37\x77\x56\xa2\xf7\xda\xac\x39\x68\xb8\xa2\x57\x82\xb0\x41\x4a\xad\xf2\x70\x04\xf7\x36\x12\xaf\x7f\x62\x9d\x09\x5f\xe4\x65\x09\x95\x20\x11\x81\xb7\x21\x72\x70\xc8\xf4\x42\x05\x5e\xaf\x8d\xa0\xc2\x61\xe8\xa1\x15\xc2\x46\x90\x64\x92\x8b\xb5\xd0\xc6\xd3\x1f\x00\x19\xa7\xae\xc6\xe5\x5e\x6c\xf2\x0c\x67\xfc\x0e\xf0\x19\x14\xae\x8a\x75\x4c\x9c\x82\xa5\x13\xc6\x0b\xc9\xa4\x6e\x43\xeb\x64\x3f\xe8\x8f\xf0\x74\x3a\xc6\xe1\xa9\x12\x27\x93\xe1\xd9\x74\x90\x9c\x0e\x27\x67\xfd\x51\x1f\xcf\xa6\xc9\x68\x8c\xd3\xf1\x70\x35\x90\xa7\x67\x38\x16\x93\x93\xf1\x70\xd5\x47\x71\x32\x49\xd4\xf8\x74\xdc\xc7\xa9\xc2\x56\x04\x8f\x01\xd8\xcd\xa0\x75\x94\xe9\xd6\x53\xa7\xb4\xfe\x58\x3e\x00\x4e\xf6\x83\xb1\x92\x83\xe9\x18\xbb\xfd\xc1\x64\x06\xfd\xe8\xe5\xcf\x70\x22\xe5\x68\x32\xec\x77\x4f\x66\x30\x38\x3a\x3f\x1d\x8c\x92\xe1\x64\x32\xed\x4e\xcf\x5e\x2b\x08\x95\x9c\x4e\x93\xe9\xb4\x3b\x98\xbc\x81\x92\x83\x49\x5f\xf5\xa7\xc8\x50\xfd\xf2\xf8\xa9\xf9\xd8\x6c\xf0\xa0\x51\x1e\xc4\x7a\xed\x70\x2d\x08\xcb\xaa\x05\x8f\xc3\x8f\x84\x87\x44\xdc\x6c\xf0\xfb\x0c\x1e\x9f\xa2\x66\xd0\x91\x22\xcb\x96\x87\x9c\x19\x4d\x85\x33\x1e\x3e\x24\x22\xf3\xf8\x21\xf0\xc2\x58\xd3\x65\x01\xcf\x63\x23\xe0\xe5\x88\x0f\x5d\x6d\x14\xee\x83\x00\x1f\x25\xda\x79\xe2\xb1\x2a\x36\x01\x51\x24\x3c\x45\x3e\x6c\x45\x56\xe0\x87\x08\x74\x8c\x31\x6c\x70\xc3\x45\x15\x8e\xe2\x66\xa3\x36\x39\x83\xa4\x30\x65\xa5\x6c\xee\xc9\x75\x1e\x9b\x8d\x86\xdf\x69\x92\xe9\xd1\x81\x14\x1e\xa1\x75\x31\xbf\xbe\x6e\xcd\xe0\xe5\xe3\xe2\xf6\x97\xcb\xd6\xac\xd9\x68\xb0\x49\x6e\xb5\xf5\x21\x02\xa1\x94\x8b\x60\x2b\xb2\xa8\xb4\x58\x3d\xfc\xcf\xf0\x62\x0b\xaa\x9f\xfe\x27\x6b\x96\x21\xc3\xf0\x1c\x7a\x3d\xf0\x24\xe4\x03\xe4\xe4\x80\x6c\xa9\xd6\x7c\xb6\xfe\xcb\xe5\xf5\xe5\xd7\xf9\xf2\xf2\x95\x17\x8b\xe5\x7c\x79\x75\x51\x1e\xbd\xeb\xc7\xff\xe1\xc2\xe0\xcf\x5c\x68\x34\x9e\x9a\xcf\x52\xa1\x32\xe7\xcd\x46\x5d\x3b\x4f\x3c\x37\x3c\xcf\xa3\x30\x48\x34\x8f\x4f\x2e\x4e\xd5\xa0\xa1\xdb\xb9\x6f\xb8\x8f\xe2\x66\x23\xc8\x1f\x65\x5d\xab\x28\xb4\x58\xc8\xf3\x56\x38\x78\xc0\x03\x7c\x82\x56\x0b\x3e\x02\xd9\x6f\xb8\x6f\x6b\xd5\x81\x8f\xd0\xea\xf2\x09\x4b\x9e\x37\x1b\x0d\x4a\xb5\x8f\xb5\xf2\xff\x7a\xc0\xc3\xbf\xe1\x13\xbc\xfe\xfe\x08\x7d\xf8\xfd\x77\xe8\xbf\x72\x13\x73\x5e\x19\xda\x6c\xed\x03\xaa\x40\x1c\x1e\x03\x07\xb0\xb9\xb4\xaa\xda\x19\x1c\xc1\x3f\x7f\x05\xdc\xa3\x2c\x08\x7d\x70\x17\xf3\x23\x6f\x33\xbb\x8e\x40\xad\x3a\xc0\xde\xf6\x7a\xb0\x78\xd0\x79\x58\x5b\x25\x8a\x2f\x61\x78\x1f\x1a\x4b\xa0\x0d\xa1\x33\x22\x0b\x04\xf7\x55\x7c\x92\x6a\x7f\x6b\x0e\x32\x6a\x6c\xf3\x98\xec\x82\x9c\x36\xeb\x76\xa7\xc3\x31\xea\x04\xda\x7f\x93\x54\xda\xaa\xd2\x7f\x5e\x15\xe3\xd8\x74\xee\xb0\x2b\xed\x26\x0f\x77\x0b\xb3\xb5\x32\x6c\x61\x1f\x01\xa5\x96\xb7\xb7\x43\xf8\x4f\xe1\x09\x12\x61\xe4\xb3\xa3\x15\xbe\xf6\x77\x0e\x2b\x65\xd5\x26\x3b\x57\xca\xa1\xf7\xc1\xa3\xc0\x84\x98\x9b\xad\xdd\xef\xbc\x38\xd7\x3f\xeb\x74\x3a\x7f\xe6\xd4\x57\x11\x36\xff\xab\xc0\xeb\x35\x56\xc5\xaf\xcd\xe2\x27\x7c\x82\x37\x16\x24\x71\xd5\x3a\x71\xe8\xd8\xdb\xa4\xfd\x9c\x81\x20\xfe\xf9\x13\x8c\x2a\x93\x25\xc4\x6d\x92\xbc\x87\xf1\x46\xbf\xa4\x49\x60\x5c\x88\x88\x49\xef\x0e\xb1\xe7\xe5\xd5\x0e\x20\x51\x85\xf5\x11\x46\x9d\x28\xb8\xd6\x1d\x75\xaa\x78\x6a\xea\x24\xa2\xc8\xe8\x98\x3b\xbb\xb4\xba\x21\x08\x49\x85\xc8\x2a\xba\xf0\x4d\xc7\x26\x20\x4c\xcd\xa8\xa4\xdc\xdd\x8d\xa0\xff\x2e\x87\xa0\x36\xe1\xd0\xbf\x67\x83\x93\xc7\x76\x6a\x72\x85\xad\xbf\x42\x6e\x30\x42\x27\xf8\xda\x63\xb7\x55\x8b\x55\xa3\x33\xc0\x95\x13\x91\xf3\x5f\x01\x57\xeb\x8b\x77\x48\x58\xad\x8d\xf2\xfc\xc8\x29\x49\xfb\x17\x52\xd7\xcd\x6c\x0b\x9e\xa2\x5c\x43\x6e\x60\x10\x99\xb7\x55\x55\x24\xed\x63\x6d\xf2\x82\xe2\x0c\xcd\x9a\xd2\xe3\x0a\x1d\x25\xbd\xcc\xf4\xb3\x70\x04\x27\x51\x48\xf4\x5b\xf5\xee\xa8\xf3\x7a\xca\xd4\xfd\x5c\x76\xf0\x53\xf3\xbf\x01\x00\x00\xff\xff\xde\x28\xc2\xa6\x62\x0b\x00\x00")

func _4byte_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		__4byte_tracerJs,
		"4byte_tracer.js",
	)
}

func _4byte_tracerJs() (*asset, error) {
	bytes, err := _4byte_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4byte_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5d, 0x48, 0x89, 0x5d, 0x5e, 0xca, 0x4c, 0xe2, 0xfb, 0x8, 0x3d, 0x13, 0x2a, 0xdd, 0x80, 0xce, 0x46, 0x60, 0x3c, 0x38, 0xef, 0x17, 0x1b, 0x97, 0x29, 0x2a, 0x3f, 0x6b, 0x87, 0x54, 0x3b, 0xf}}
	return a, nil
}

var _bigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x5b\x6f\xdb\x36\x14\x7e\xf7\xaf\xf8\xde\x92\x20\xae\xd5\x6e\x2f\x83\x33\x0f\xf0\xb2\xa4\x35\x90\xda\x81\xed\xac\x08\x86\x3d\x50\xd2\x91\x44\x84\xe1\x11\xc8\x43\xbb\x42\x90\xff\x3e\x50\xb2\x7c\xd9\x32\xa4\x7a\x92\xcd\xef\x76\x2e\x54\x92\xe0\x9a\xeb\xc6\xe9\xb2\x12\xfc\xf4\xf1\xd3\x2f\x48\x1b\x48\x45\x98\x06\xa9\xd8\xf9\x41\x92\x60\x5d\x69\x8f\x42\x1b\x82\xf6\xa8\x95\x13\x70\xd1\x62\x4a\xfe\x90\xb1\x23\x18\x9d\x3a\xe5\x9a\xd1\x20\x49\x3a\xfc\x7f\x8e\x22\xb3\x70\x44\xf0\x5c\xc8\x56\x39\x1a\xa3\xe1\x80\x4c\x59\x38\xca\xb5\x17\xa7\xd3\x20\x04\x2d\x50\x36\x4f\xd8\xe1\x99\x73\x5d\x34\x51\x4e\x0b\x82\xcd\xc9\xb5\x96\x42\xee\xd9\xf7\xfe\x9f\xe7\x0f\xb8\x23\xef\xc9\xe1\x33\x59\x72\xca\xe0\x3e\xa4\x46\x67\xb8\xd3\x19\x59\x4f\x50\x1e\x75\xfc\xc7\x57\x94\x23\x6d\xe5\x22\xf1\x36\x46\x59\xed\xa2\xe0\x96\x83\xcd\x95\x68\xb6\x43\x90\x96\x8a\x1c\x36\xe4\xbc\x66\x8b\x9f\x7b\xab\x9d\xe0\x10\xec\xa2\xc8\xb9\x92\x58\x80\x03\xd7\x91\x77\x01\x65\x1b\x18\x25\x07\xea\x3b\xcd\x38\xd4\x9c\x43\xdb\xd6\xa2\xe2\x9a\x20\x95\x92\x58\xf1\x56\x1b\x83\x94\x10\x3c\x15\xc1\x0c\xa3\x52\x1a\x04\xdf\x66\xeb\x2f\x8b\x87\x35\xa6\xf3\x47\x7c\x9b\x2e\x97\xd3\xf9\xfa\xf1\x0a\x5b\x2d\x15\x07\x01\x6d\xa8\x93\xd2\xcf\xb5\xd1\x94\x63\xab\x9c\x53\x56\x1a\x70\x11\x15\xbe\xde\x2c\xaf\xbf\x4c\xe7\xeb\xe9\xef\xb3\xbb\xd9\xfa\x11\xec\x70\x3b\x5b\xcf\x6f\x56\x2b\xdc\x2e\x96\x98\xe2\x7e\xba\x5c\xcf\xae\x1f\xee\xa6\x4b\xdc\x3f\x2c\xef\x17\xab\x9b\x11\x56\x14\x53\x51\xe4\xbf\xdf\xef\xa2\x9d\x9c\x23\xe4\x24\x4a\x1b\xdf\x77\xe1\x91\x03\x7c\xc5\xc1\xe4\xa8\xd4\x86\xe0\x28\x23\xbd\xa1\x1c\x0a\x19\xd7\xcd\x0f\x0f\x34\x6a\x29\xc3\xb6\x6c\x6b\x7e\x73\x09\x31\x2b\x60\x59\x86\xf0\x44\xf8\xb5\x12\xa9\xc7\x49\xb2\xdd\x6e\x47\xa5\x0d\x23\x76\x65\x62\x3a\x29\x9f\xfc\x36\x1a\x0c\x5e\x06\x00\x90\x24\xa8\xb4\x97\x38\x98\x28\x99\x71\xb0\x42\xae\xdd\x33\xae\x33\xce\x09\xa9\x2e\x9d\x7a\xf6\x2d\x3a\x42\xc7\x78\x79\x1d\xf6\x5c\xa3\xbc\x2c\xea\xc8\x8e\x6f\xe0\x9a\x5c\xbb\x4e\xed\x79\x77\x38\xc6\xd9\xd9\x1e\x4f\xdf\x29\x0b\x11\x80\x9c\x6a\xa9\xa2\xcd\x8e\xb8\x67\xfc\x11\x0f\xc6\xf8\xb8\xe7\x78\xa1\xd6\x41\xdb\x0d\x3f\x51\xde\x76\x9a\x36\xe4\x9a\x3e\x61\xbb\x39\x31\xfd\x9f\x5f\x77\x06\xe4\x47\x2d\x3b\x52\xc7\x28\x82\xcd\xa2\xe7\xb9\xe1\x72\x88\x3c\xbd\x40\x57\x7b\x7c\x36\x2a\x6e\x32\x26\x30\x5c\x8e\xb8\x1e\x09\xaf\xc4\x69\x5b\x9e\x5f\x5c\x9d\x60\xba\xb8\x1d\xac\xa4\x2e\xe4\x31\x46\x17\x38\xdf\x61\x26\x90\x4a\xfb\xd1\xbe\x96\x8b\x83\x5b\xaf\xf6\x44\x0d\x8e\x60\x8b\xfa\xf2\xec\xc3\xd9\x25\xd7\x57\x27\xc8\xa8\xd9\x62\x62\xdb\xff\x7a\xa2\xe6\xef\x7f\x49\xc5\xe7\x14\x70\x79\x79\x2a\xf1\x7a\xf2\x8b\x8c\x27\xbc\x27\x81\x09\x3e\xfd\x9f\xc8\xe1\xed\x28\x3b\x26\x38\x4e\x7e\x5a\x3c\x26\x5d\xeb\xba\xf3\xc3\xe2\x14\x2a\x18\x39\x9e\xea\xb6\xda\xdd\x60\x95\x49\x50\xe6\x68\x53\xb8\x80\xb2\xfd\xac\x8b\xee\x6e\x45\x95\x56\xe2\xcd\xe9\x1e\x6c\x1c\xf9\xb7\x7c\x94\x31\xad\x57\x27\xea\xbb\x9b\x99\x12\x59\x68\x89\x1b\x4c\x39\x78\x43\x2e\x7e\x91\xe1\x48\x82\xb3\xbe\x57\x8c\xb4\x42\x5b\x65\x7a\xed\xdd\x05\x16\xa7\x32\x6d\xcb\x2e\x5a\x77\x74\x94\x2d\x93\xef\xc7\x5b\xd7\x69\x1e\x1a\xbf\xef\xce\xeb\xe0\x9f\x00\x00\x00\xff\xff\x4d\xdf\x78\xa6\x97\x06\x00\x00")

func bigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_bigram_tracerJs,
		"bigram_tracer.js",
	)
}

func bigram_tracerJs() (*asset, error) {
	bytes, err := bigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcb, 0xbf, 0x87, 0xa9, 0x3e, 0xb6, 0xd7, 0xed, 0xa6, 0xd7, 0xdb, 0x19, 0x9e, 0x5e, 0xb2, 0x64, 0xba, 0x46, 0x10, 0xde, 0x24, 0x93, 0xa6, 0xf1, 0x58, 0x19, 0x98, 0x60, 0x9e, 0x3f, 0x35, 0x84}}
	return a, nil
}

var _call_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\xdf\x73\xdb\xb6\x93\x7f\x96\xfe\x8a\x4d\x1e\x6a\x69\xa2\x48\x4a\xd2\xeb\x83\x5d\xf5\x46\x75\x94\xd6\x33\x6e\x9c\xb1\x95\x66\x32\x99\x3c\x40\xe4\x52\x42\x0d\x01\x2c\x00\x5a\xe6\xb5\xfe\xdf\x6f\x76\x01\x52\x94\x28\x3b\x4e\xaf\x9d\xeb\xf7\x4d\x00\x76\x17\x8b\xc5\x67\x7f\x81\x1a\x8d\xe0\xd4\xe4\xa5\x95\xcb\x95\x87\x97\xe3\x97\xaf\x60\x51\x82\x5f\x21\x4c\x0b\xbf\x32\xd6\x75\x47\x23\x98\xaf\xa4\x83\x4c\x2a\x04\xe9\x20\x17\xd6\x83\xc9\x98\x66\x69\x9e\x27\xc6\x22\x28\xb9\xb0\xc2\x96\xc3\xee\x68\x14\xe8\x5b\x4b\xc4\x99\x59\x44\x70\x26\xf3\x1b\x61\xf1\x18\x4a\x53\x40\x22\x34\x58\x4c\xa5\xf3\x56\x2e\x0a\x8f\x20\x3d\x08\x9d\x8e\x8c\x85\xb5\x49\x65\x56\x92\x38\xe9\xa1\xd0\x29\x5a\xde\xd2\xa3\x5d\xbb\x6a\xff\x9f\xde\xbe\x87\x73\x74\x0e\x2d\xfc\x84\x1a\xad\x50\xf0\xae\x58\x28\x99\xc0\xb9\x4c\x50\x3b\x04\xe1\x20\xa7\x19\xb7\xc2\x14\x16\x2c\x8e\x18\xdf\x90\x2a\x57\x51\x15\x78\x63\x0a\x9d\x0a\x2f\x8d\x1e\x00\x4a\xbf\x42\x0b\x37\x68\x9d\x34\x1a\x5e\x55\x5b\x45\x81\x03\x30\x96\x84\xf4\x84\xa7\x03\x58\x30\x39\xf1\xf5\x41\xe8\x12\x94\xf0\x5b\xd6\x2f\x18\x63\x7b\xe6\x14\xa4\xe6\x2d\x56\x26\x47\xf0\x2b\xe1\xe9\xc4\x1b\xa9\x14\x2c\x10\x0a\x87\x59\xa1\x06\x24\x69\x51\x78\xf8\x70\x36\xff\xf9\xe2\xfd\x1c\xa6\x6f\x3f\xc2\x87\xe9\xe5\xe5\xf4\xed\xfc\xe3\x09\x6c\xa4\x5f\x99\xc2\x03\xde\x60\x10\x25\xd7\xb9\x92\x98\xc2\x46\x58\x2b\xb4\x2f\xc1\x64\x24\xe1\x97\xd9\xe5\xe9\xcf\xd3\xb7\xf3\xe9\x8f\x67\xe7\x67\xf3\x8f\x60\x2c\xbc\x39\x9b\xbf\x9d\x5d\x5d\xc1\x9b\x8b\x4b\x98\xc2\xbb\xe9\xe5\xfc\xec\xf4\xfd\xf9\xf4\x12\xde\xbd\xbf\x7c\x77\x71\x35\x1b\xc2\x15\x92\x56\x48\xfc\x5f\xb6\x77\xc6\x37\x67\x11\x52\xf4\x42\x2a\x57\x59\xe1\xa3\x29\xc0\xad\x4c\xa1\x52\x58\x89\x1b\x04\x8b\x09\xca\x1b\x4c\x41\x40\x62\xf2\xf2\xd1\x17\x4a\xb2\x84\x32\x7a\xc9\x67\x3e\x08\x42\x38\xcb\x40\x1b\x3f\x00\x87\x08\xdf\xaf\xbc\xcf\x8f\x47\xa3\xcd\x66\x33\x5c\xea\x62\x68\xec\x72\xa4\x82\x28\x37\xfa\x61\xd8\x25\x79\x89\x50\x6a\x6e\x45\x82\x96\x2e\x46\x40\x56\x90\xe9\x95\xd9\x68\xf0\x56\x68\x27\x12\xba\x62\xfa\x9d\x30\x08\x85\x07\xbc\xa5\x91\x77\x04\x56\xb0\x98\x1b\x4b\xbf\x95\xaa\xf0\x25\xb5\x47\xab\x85\x62\xd9\x0e\xd6\x22\x45\xf2\x2b\xd1\x14\x38\x68\x1e\x84\xe0\x13\xae\x1a\xa4\xce\x8c\x5d\x33\x1c\x87\xdd\x3f\xba\x9d\xa8\xa1\xf3\x22\xb9\x26\x05\x49\x7e\x52\x58\x8b\xda\x93\x19\x0b\xeb\xe4\x0d\x32\x09\x04\x9a\x68\xcb\xd3\x5f\x7f\x01\xbc\xc5\xa4\x08\x92\x3a\xb5\x90\x63\xf8\xf4\xc7\xdd\xe7\x41\xb7\xdb\x21\xd9\x29\xba\x04\x75\x8a\x29\x1f\xf0\xda\xc1\x66\x85\xec\x02\x1b\x3c\xba\x41\xf8\xad\x70\xbe\x41\x93\x59\xb3\x06\xa1\xc1\x14\x04\xf5\xa6\x79\xa4\xf6\x26\x48\x14\x34\xd0\x68\x59\xa7\x61\xb7\xd3\xa9\xd9\x8f\x21\x13\xca\x21\x6d\x3d\x1a\x81\xf3\x98\xd3\x81\xa4\xbe\x31\xd7\x24\xdb\x58\x42\xb0\x2d\xc1\xe4\x89\x49\xa3\x2f\xd0\x51\xea\x93\xa0\x1b\x76\x3b\xc4\x77\x0c\x59\xa1\x79\xe3\x9e\x32\xcb\x01\xa4\x8b\x3e\x04\x5b\x9d\x8a\xdc\x17\x16\xd9\xa2\x68\xad\xb1\x0e\xe4\x7a\x8d\xa9\x14\x1e\x55\xd9\xed\xdc\x08\x1b\xe6\x61\x02\xca\x2c\x87\x4b\xf4\x33\x1a\xf6\xfa\x27\xdd\x8e\xcc\xa0\x17\x16\x9f\x4c\x26\x1c\x75\x32\xa9\x31\x65\xd9\x1d\xbf\x92\x6e\x98\x89\x42\xf9\x7a\xcf\x93\x6e\xa7\x63\xd1\x17\x56\x9f\x74\x3b\x77\xbc\xff\x07\x04\xa3\x55\x09\x09\x45\x16\xb1\x20\xb7\x74\xa5\xf3\xb8\x8e\xa7\x72\x03\xc8\x84\x23\xeb\xc9\x0c\x36\x08\xb9\xc5\xe7\xc9\x0a\xe9\xde\x74\x82\x41\x3f\x57\x3a\xbe\xcf\x09\xd0\x4e\x43\x93\x0f\xbd\x79\x5b\xac\x17\x68\x7b\x7d\xf8\x06\xc6\xb7\xd9\xb8\x0f\x93\x09\xff\x88\x5a\x47\x96\xa0\x29\xc9\x30\x79\x3c\x20\x73\x5f\x79\x2b\xf5\x92\xcf\x18\xd4\x3c\xcb\x40\x80\xc6\x0d\x24\x46\x33\x96\xe9\x26\x16\x28\xf5\x12\x12\x8b\xc2\x63\x3a\x00\x91\xa6\xe0\x4d\x00\x5c\x0d\xaf\x9d\xed\xe0\x9b\x6f\xa0\x47\x3b\x4d\xe0\xe8\xf4\x72\x36\x9d\xcf\x8e\xe0\xcf\x3f\x21\xcc\x3c\x0d\x33\x2f\x9f\xf6\xb7\x5a\x49\x7d\x91\x65\x51\x31\x16\x37\xcc\x11\xaf\x7b\x2f\xfa\xc3\x1b\xa1\x0a\xbc\xc8\x58\xc5\x48\x3a\xd3\x29\x4c\x22\xcb\xb3\x7d\x96\x97\x3b\x2c\x01\x79\x53\xe7\x70\xbd\x50\xd8\xf6\xc1\xe8\xa4\xec\xaf\xce\x53\xb8\x20\xb4\x25\x66\x9d\x2b\x24\x14\xc5\x3d\xa3\xd5\x49\xdb\x8e\x2f\x73\x3c\x06\x00\x30\xf9\x80\xc6\x04\x7d\x1e\x7b\xf3\x33\xde\xf2\xc5\x54\xb6\x23\x10\x4d\xd3\xd4\xa2\x73\xbd\x7e\x9f\xa9\xa5\xce\x0b\x7f\xbc\x43\xbd\xc6\xb5\xb1\xe5\xd0\x51\xfc\xe9\xf1\xa9\x06\xe1\x90\x91\x85\x02\xde\xb2\x3c\xd3\xc4\x55\x21\x93\xa7\x7a\xcd\xf5\x53\xe3\xfc\x71\xb5\x4e\x83\xb8\xca\xc6\x20\xd6\xa3\xf1\xed\x51\xdb\x5c\xe3\xfe\x16\x05\x2f\xbe\xeb\x77\x3b\x9d\xbb\x93\x0a\xd3\x75\x64\x18\xe6\x85\x5b\xf5\x18\x47\xf5\xe2\xd6\xf7\x27\xe0\x6d\x81\x6d\xc4\x33\x94\xda\x30\x72\xa8\x32\x8a\x1c\xde\x16\x09\xc3\x69\x29\x38\xae\xb0\x57\x0b\x0a\xb4\xae\x58\xb0\xc1\xbd\x31\x2d\x54\x45\x50\x5d\xcd\xce\xdf\xbc\x9e\x5d\xcd\x2f\xdf\x9f\xce\x8f\xb6\x30\x52\x98\x79\xd2\x67\x57\x7b\x85\x7a\xe9\x57\xa4\x39\x09\xdb\x5d\xfc\x44\x2c\xcf\x5f\x7c\x0e\x33\x30\x69\xbb\x77\xe7\x61\x06\xf8\xf4\x99\x24\xdf\xb5\x8c\xb6\x4b\x18\x4c\xf8\x37\x00\xc8\x1b\xa6\xad\xa8\xbd\xa9\xd6\x1f\xbe\xd8\x7f\x04\x4b\xe9\x82\x08\x7e\x14\x4a\xe8\x04\x1f\x50\xbc\x05\xb1\x46\x80\x6c\x05\x9e\x35\xfa\x95\x49\x39\xfa\x27\x22\xa4\x90\x0a\x3a\xa9\xd1\xf8\xd5\xe1\x67\x7a\x7e\xde\x08\x3e\x3c\x3e\xbd\x78\xdd\x0c\x48\x47\xaf\x67\xe7\xb3\x9f\xa6\xf3\xd9\x3e\xed\xd5\x7c\x3a\x3f\x3b\xe5\xd9\x18\xab\x46\x23\xb8\xba\x96\x39\x67\x11\x8e\xd0\x66\x9d\x73\x01\x5c\x6b\xeb\x06\xe0\x57\x86\x4a\x4c\x1b\xb3\x64\x26\x74\x52\xe5\x2e\x17\x81\xea\x0d\xc1\xf4\xbe\xbb\x7b\xb1\x77\x77\x15\x74\xa5\x7b\x67\x31\x6e\x99\xf6\xbc\x89\x4a\xd5\x96\x64\x14\x72\x90\xe7\x60\xda\x7b\xfc\xf1\xe0\xbf\x61\x0c\xc7\xf0\x22\x84\xcc\x07\x22\xf2\x4b\x78\x46\xd2\xbf\x3e\x2e\xbf\x3a\xc0\xf8\xaf\x8b\xce\x2d\xe7\xfa\x7f\x0a\xda\xa6\xf0\x17\x59\x76\x0c\xfb\x46\xfc\xb6\x65\xc4\x8a\xfc\x1c\x75\x9b\xfc\xbf\x5a\xe4\x55\x7c\x27\x34\x99\x1c\x9e\xb4\xd0\x11\x42\xec\x93\x3d\xf0\x07\xdb\x72\xdd\xc6\xa2\x60\x72\x4f\x3a\x79\xb9\x8b\xdc\xc3\x91\xf1\x2f\xa7\x93\x83\xa5\x27\x15\x98\xbb\xb5\xe5\x00\x2c\x7a\x2b\xf1\x86\xfa\xc6\x23\xc7\xf2\xa8\x0a\x37\x1b\x8a\x53\x43\xf8\x80\x2c\x50\x23\x72\x20\x89\x45\x3b\xd5\x5d\x5c\xc6\x52\xe1\x1d\x5b\x2f\x46\x96\xe0\xda\xda\x22\xac\x45\x49\xad\x57\x56\xe8\xeb\x12\xc2\x05\x42\x5a\x6a\xb1\x96\x89\x63\x89\x5c\xb2\x5b\x5c\x0a\xcb\x82\x2d\xfe\x5e\xa0\xa3\x4e\x8e\x00\x2c\x12\x5f\x08\xa5\x4a\x58\x4a\x6a\xc7\x22\x7f\xef\xe5\xab\xf1\x18\x9c\x97\x39\xea\x74\x00\xdf\xbd\x1a\x7d\xf7\x2d\xd8\x42\x61\x7f\xd8\xdd\xa6\xab\xfa\xb4\xe1\x26\x68\x3e\x82\xe6\x35\xe6\x7e\xd5\xeb\xc3\x0f\xf7\x64\xbd\xc3\x39\xec\x20\x29\x3c\x87\x17\x9f\x87\x51\xaf\xc9\x3e\x6a\xf9\x2a\x01\x95\xc3\x20\x91\x5a\xd8\x8b\xd7\x17\x3d\x2b\xa4\xf3\x65\xff\x98\x1b\x5a\xb6\xd7\x46\xc4\xce\x86\xee\x05\x72\x25\xa4\x06\x91\x24\xa6\xd0\x9e\x6c\x5f\x35\x29\xaa\xa4\x78\x7e\xe4\xa3\x30\x6e\xff\x44\x92\xa0\x73\x55\x74\xe7\x7b\x8b\xfa\x88\x35\xf1\x83\xd4\x4e\xa6\xd8\xb8\x1b\x8a\x0c\x86\xc3\x71\xa4\xa0\x06\x39\x8a\x5c\x1b\x47\xbb\x2c\x10\x36\x96\x3a\x2a\x27\x75\xc2\x4f\x09\x29\x92\xb5\x1d\x18\x0d\x02\x94\xe1\x77\x0b\xf6\x71\x10\x76\xe9\x86\x21\xc4\xc7\x8d\x29\xe2\x68\xb3\x19\x36\x91\xdc\x04\x2b\x77\x2e\x3b\x35\x8f\x06\xbc\x95\xce\x73\xc9\x4c\x3a\x4a\x07\x01\xca\x52\x2f\x07\x90\x9b\x9c\xc3\xf3\x17\xd2\x57\x0c\xd1\x97\xb3\x5f\x67\x97\x55\x85\xf3\x15\x97\x18\x1b\x99\xa7\x75\xa3\x07\x96\x5a\x28\x8f\xe9\xd3\xfd\xde\xe4\x00\x98\x26\xf7\x80\x89\x84\xd7\x79\xf0\x5d\xe3\x20\x4a\x38\xbf\xbd\x90\x25\x86\xf6\xac\xb9\xb9\x2b\x94\x77\xbb\xf1\x7a\x3f\x28\x98\x3c\xe6\x04\xd2\x88\x63\x0d\x05\xf3\xfd\x1e\x62\x67\x61\xdb\x4a\xd4\xa0\x3c\x6b\x98\x76\xc3\xe5\x64\xa0\x69\x04\x05\x5e\xaf\xea\x52\x11\x32\x00\x2b\x6e\x0a\x4f\x20\xa0\x44\x5d\xc7\xbb\x00\x83\xf7\x8e\x2f\x3b\x06\xbd\x85\x5c\x9e\x69\xdf\x6b\xac\x9f\x69\x78\x0e\x8d\x31\xc5\x72\x78\xbe\xef\x43\xed\xe0\xd8\x49\x51\xa1\x47\xd8\x11\x75\x02\xed\x59\x12\xc8\xc6\x61\x0b\x5a\xf4\xed\xd4\x3c\x0e\x12\xc9\x7a\x4f\x2c\xfa\x21\xfe\x5e\x08\xe5\x7a\xe3\xaa\x4a\x08\xe7\xf1\x86\x13\xdc\xa4\x55\x3f\x12\xcb\x6e\xc5\x78\xb2\xe5\x8a\x96\xa9\xb8\x42\xe1\x77\x6a\x52\x7c\x50\x40\x90\x10\xa3\x46\x7d\xab\x11\x9c\x07\x2a\xed\x4e\x73\x1d\x9e\xd6\xb5\x40\x26\xa4\x2a\x2c\x3e\x3d\x81\x56\xd4\x71\x85\xcd\x44\xc2\x77\xea\x10\xb8\x0b\x77\xe0\xcc\x1a\x57\x66\xc3\x9b\xb7\xc3\x56\x1b\x21\x35\x18\xf6\xb2\x07\x83\x38\x84\x81\xc2\x89\x25\x36\x40\x52\x59\xba\x71\x45\x87\xde\x06\xfe\xef\x20\x7a\xd6\x9c\x79\x14\xa4\xee\xfe\x06\x94\xec\xdd\x77\xab\xe2\xa9\x88\xb8\xee\x69\x0c\x2a\x75\x43\x45\xf2\x6f\x01\xc0\x57\x7a\xd9\x1e\x43\x38\xd9\x2e\x79\x38\x5f\x55\xde\x3c\x06\x08\xcd\xf5\x07\x30\x70\xb8\x7e\x22\xd4\xea\xdf\x30\xf1\x5b\xe4\x72\xd9\x43\xa3\xdc\xe2\x8d\x34\x05\x65\x33\xfc\x0f\x69\x83\xab\xd2\xef\xae\x7b\x17\xdf\xfc\xf8\xde\x9a\x8f\x7e\x9b\x55\x7c\xb2\x0e\x65\x53\x23\x97\x18\x4e\xb1\xf1\x29\x30\x0b\x8f\xc9\x1d\xe6\xbf\xe7\xf1\xaf\xe1\xf3\xde\xe4\x54\x14\xc4\x54\xa5\x2c\x8a\xb4\xac\x33\xe3\x20\xd4\x23\xb0\x12\x3a\x8d\xdd\x88\x48\x53\x49\xf2\x18\x82\xa4\xa1\x58\x0a\xa9\x0f\x5b\xf0\x8b\xe9\xf8\x10\x2a\xea\x44\x5c\x5d\x73\x33\xab\xc6\xee\x91\x9a\x3d\xd6\xf8\x31\xe9\x73\xcf\x85\xf6\x5f\x32\xc3\x26\xa7\x46\xbb\x62\xcd\x35\x31\x88\x1b\x21\x95\xa0\xf6\xab\xaa\xb4\x74\x0a\x89\x42\xa1\xc3\xb7\x0b\xcc\xbc\xb9\x41\xeb\xfe\x69\x98\x1f\x08\x94\x8d\x99\x68\xa0\xaf\xf5\xe3\xc7\xba\x71\x30\xcb\x1b\x25\xbc\x8f\xb0\x6b\x98\x3d\xb8\x9a\xf4\xfc\x8d\x0b\xb5\xff\x0a\x27\x63\x9a\x1f\x60\x1c\x8d\xf3\x97\xfc\xee\x71\x8e\x17\xe2\xdc\xe3\x5d\xef\x00\xf4\xce\xeb\x22\x2e\x1e\xde\x1b\x33\x00\x85\x82\xfb\xa8\xea\x6b\x54\x2c\x57\x1f\x6c\xe9\x2a\xaf\x0e\x65\x5f\xcb\xad\xf9\x6d\x6f\x85\xd5\x93\x48\x28\xfd\x17\x88\x1a\xa4\x47\x2b\xa8\x61\x22\xc8\xc5\x8f\x28\xa4\x65\x68\xaf\xf8\x5e\x24\x39\x63\x14\x1c\xbf\x68\x50\xee\x96\x7a\x39\xec\x76\xc2\x7c\x23\x0e\x24\xfe\x76\x1b\x07\x42\x4e\x64\xce\xfd\xd7\x82\xc4\xdf\x72\x51\x79\xe8\xcd\x80\xd6\x68\xea\xe0\x13\x01\x33\x9a\xc3\xcf\x63\xb4\xc6\x73\x3b\x60\x6f\xb4\xff\x41\xd2\x9e\x93\xf8\xdb\x83\x3e\xd2\x60\x23\xf7\x38\xbe\x97\x8d\x56\x0f\xb0\xee\xbd\x61\x10\x3d\x4f\xd5\x2f\x08\x61\x79\xbb\x1a\xa6\xe2\xa1\xe5\xba\x61\x27\xb9\x66\x3b\xdd\xdd\x93\x4a\xc6\x15\x36\x0f\x07\x3c\xb2\x7f\x0d\xde\x7b\x58\x9b\x89\xb5\x4d\xf2\x50\x38\x65\xe9\x55\xf4\xbb\x87\xb5\xd1\xca\x72\x48\x23\xd3\x3d\x56\x64\x4d\xdc\x54\x71\x87\x66\x47\x08\xbf\x44\xb6\x96\x0f\xb5\x65\xd4\xdb\x44\xc2\xaa\xf8\x9a\x4c\x9e\x8e\x6f\xab\xaf\x24\x55\x2c\xdb\xa1\xa9\x94\x08\x5e\x12\xce\xcb\x1e\x22\xff\x07\xe3\xb6\x4d\x7f\xac\x96\xc0\x62\xf8\x98\xc3\xc5\x2f\xb9\xa3\x59\x70\x75\x51\x38\xea\x5a\xb7\x7e\x96\xa2\x93\x16\x53\xc8\x24\xaa\x14\x4c\x8a\x96\xfb\xe1\xdf\x9c\xd1\xe1\x53\x1d\x5a\x49\x12\xc3\x57\xc9\xf0\x87\x00\xfe\x56\xaa\x65\x82\xbe\x84\x0c\x05\x7f\x74\xf3\x06\x72\xe1\x1c\xac\x51\x50\x17\x9c\x15\x4a\x95\x60\x6c\x8a\x24\xbc\x6e\x0e\xc9\xc5\x0d\x14\x0e\xad\x83\xcd\xca\xc4\x74\xcc\x45\x60\x4e\xb5\xac\xf4\x83\xf8\xf8\x23\x5d\xae\x44\x09\xd2\x53\xea\x8f\x87\x6a\x7a\xfd\xce\x17\x2f\x67\xc8\xc0\x6d\x97\xaf\x1a\xc9\x5d\x9f\xe7\x69\x1a\xed\x7a\x7b\xec\x9d\x76\xfd\x7c\xfb\x20\xd6\x72\xea\x46\x32\x6a\x79\xee\x5e\xa6\xdb\x75\x4f\x5e\xe4\xd1\xae\x63\x36\xca\xf2\x20\x90\xd0\x54\x33\xf0\x68\xcf\x55\x59\xe3\xe8\xab\xe1\x2b\x6f\x4d\xce\xa3\x41\x04\x0f\xdd\x68\x8f\x0c\x75\x8d\x25\x45\xf9\x60\xaf\x46\xca\x0a\x13\x9f\xae\xb1\xfc\x7c\x38\x43\x45\x68\x36\xe8\xea\x94\x54\xb9\x48\x58\x7b\x20\x30\xd4\x5a\xc8\xc9\xf8\x04\xe4\xf7\x4d\x86\x2a\xab\x82\x7c\xf6\xac\xda\xb3\xb9\xfe\x49\x7e\xae\xbc\xbd\x46\xff\xde\x7a\x7f\x47\xa3\xe8\x2f\x81\x26\x14\xa2\xdd\xff\x0d\x00\x00\xff\xff\x80\xe7\xea\x03\xf2\x22\x00\x00")

func call_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_call_tracerJs,
		"call_tracer.js",
	)
}

func call_tracerJs() (*asset, error) {
	bytes, err := call_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "call_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb0, 0x3f, 0x1f, 0x1b, 0xaf, 0x3, 0x9a, 0x84, 0xd7, 0x48, 0xd0, 0x1d, 0xfe, 0xde, 0x70, 0x2d, 0x25, 0x89, 0x70, 0xa, 0x15, 0x50, 0x6f, 0x64, 0xf0, 0xee, 0x31, 0x6f, 0x7e, 0xaa, 0xc0, 0x7e}}
	return a, nil
}

var _evmdis_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\xdf\x6f\xda\xca\x12\x7e\x86\xbf\x62\x94\x27\x50\x29\x60\x63\x08\x38\x27\x47\xe2\xa6\xb4\x87\xab\x34\x89\x80\xdc\xa3\x0a\xe5\x61\x81\x31\xac\x6a\xbc\xd6\xee\x9a\x1c\x6e\x95\xff\xfd\x6a\x76\xd6\x40\x9a\xe4\xe6\x54\x3a\x7d\xd8\xad\xbd\xf3\x7d\xf3\xcd\x0f\xcf\x92\x56\x0b\xae\x54\xbe\xd7\x72\xbd\xb1\x10\xb6\x83\x73\x58\xec\xc1\x6e\x10\x86\x85\xdd\x28\x6d\xaa\xad\x16\xcc\x36\xd2\x40\x22\x53\x04\x69\x20\x17\xda\x82\x4a\x9c\xcd\x5a\x7d\x5c\x2a\x8d\x90\xca\x85\x16\x7a\xdf\xac\xb6\x5a\x6c\xff\xe2\x88\x90\x89\x46\x04\xa3\x12\xfb\x28\x34\xc6\xb0\x57\x05\x2c\x45\x06\x1a\x57\xd2\x58\x2d\x17\x85\x45\x90\x16\x44\xb6\x6a\x29\x0d\x5b\xb5\x92\xc9\x9e\xe8\xa4\x85\x22\x5b\xa1\x76\x2e\x2d\xea\xad\x29\xfd\x7f\xb9\xb9\x87\x6b\x34\x06\x35\x7c\xc1\x0c\xb5\x48\xe1\xae\x58\xa4\x72\x09\xd7\x72\x89\x99\x41\x10\x06\x72\x7a\x63\x36\xb8\x82\x85\xa3\x23\xe0\x67\x92\x32\xf5\x52\xe0\xb3\x2a\xb2\x95\xb0\x52\x65\x0d\x40\x69\x37\xa8\x61\x87\xda\x48\x95\x41\xa7\x74\xe5\x09\x1b\xa0\x34\x91\xd4\x84\xa5\x00\x34\xa8\x9c\x70\x75\x10\xd9\x1e\x52\x61\x8f\xd0\x77\x92\x71\x8c\x79\x05\x32\x73\x2e\x36\x2a\x47\xb0\x1b\x61\x29\xe2\x47\x99\xa6\xb0\x40\x28\x0c\x26\x45\xda\x20\xa6\x45\x61\xe1\xcf\xf1\xec\x8f\xdb\xfb\x19\x0c\x6f\xbe\xc1\x9f\xc3\xc9\x64\x78\x33\xfb\x76\x01\x8f\xd2\x6e\x54\x61\x01\x77\xc8\x54\x72\x9b\xa7\x12\x57\xf0\x28\xb4\x16\x99\xdd\x83\x4a\x88\xe1\xeb\x68\x72\xf5\xc7\xf0\x66\x36\xfc\xd7\xf8\x7a\x3c\xfb\x06\x4a\xc3\xe7\xf1\xec\x66\x34\x9d\xc2\xe7\xdb\x09\x0c\xe1\x6e\x38\x99\x8d\xaf\xee\xaf\x87\x13\xb8\xbb\x9f\xdc\xdd\x4e\x47\x4d\x98\x22\xa9\x42\xc2\xbf\x9f\xef\xc4\x55\x4e\x23\xac\xd0\x0a\x99\x9a\x32\x0b\xdf\x54\x01\x66\xa3\x8a\x74\x05\x1b\xb1\x43\xd0\xb8\x44\xb9\xc3\x15\x08\x58\xaa\x7c\xff\xb7\x0b\x4a\x5c\x22\x55\xd9\xda\xc5\xfc\x6a\x13\xc2\x38\x81\x4c\xd9\x06\x18\x44\xf8\x6d\x63\x6d\x1e\xb7\x5a\x8f\x8f\x8f\xcd\x75\x56\x34\x95\x5e\xb7\x52\xa6\x32\xad\xdf\x9b\x55\xe2\x5b\xee\xb6\x2b\x69\x66\x5a\x2c\x51\x83\x46\x5b\xe8\xcc\x80\x29\x92\x44\x2e\x25\x66\x16\x64\x96\x28\xbd\x75\xfd\x01\x89\x56\x5b\x10\x60\xc9\x18\xac\x82\x1c\x35\x1d\x7a\x8e\x8f\xc6\xee\x53\xa7\x71\x25\x8d\x30\x06\xb7\x8b\x74\xdf\xac\xfe\xa8\x56\x8c\x15\xcb\xef\x31\xcc\x7f\xa8\xdc\xc4\x30\x7f\x78\x7a\x68\x54\xab\x95\x2c\x2f\xcc\x06\x4d\x0c\x3f\xda\x31\xb4\x1b\x10\xc4\x10\x34\x20\x74\x6b\xc7\xad\x91\x5b\xbb\x6e\xed\xb9\xf5\xdc\xad\x7d\xb7\x0e\xdc\x1a\xb4\x79\x63\x74\xc0\x66\x01\xdb\x05\x6c\x18\xb0\x65\xc8\x96\xa1\xf7\xc3\x8e\x42\xf6\x14\xb2\xab\x90\x7d\x85\xcc\xd2\x61\x93\x88\x59\x22\x66\xe9\x32\x4b\x97\x59\xba\x6c\xd2\x65\x96\xae\x17\xdc\x75\xf1\x74\x99\xa5\x7b\xce\x4f\xcc\xd2\x65\x96\x1e\x87\xdc\x63\x40\xcf\x87\xc8\x80\x1e\x8b\xef\x31\xa0\xc7\x80\x3e\x03\xfa\xec\xb6\x1f\xf2\x53\x87\x37\x66\xe9\xb3\xdb\x7e\x8f\x37\x76\xdb\x67\x96\x3e\xb3\x0c\x58\xfc\x20\x70\x67\x03\xf6\x37\x60\x7f\x03\x9f\xd5\x32\xad\x3e\xaf\x6d\x9f\xd8\x76\xe8\xf7\x8e\xdf\x23\xbf\x77\xfd\xee\x33\xdf\xf6\xa9\x6f\xfb\xdc\xb7\x3d\xdf\xa1\x4e\x9e\x2f\xf0\x7c\x81\xe7\x0b\x3c\x5f\xe0\xf9\xca\x4a\x96\xa5\x2c\x6b\xe9\x8b\x19\xf8\x6a\x06\xbe\x9c\x81\xaf\x67\xe0\x0b\x1a\xf8\x8a\x06\xbe\xa4\x81\xaf\x69\x10\x7a\xbe\xb0\x1f\x43\x48\xfb\x20\x86\x4e\x03\x82\x4e\x3b\x86\x88\xf6\x20\x86\x2e\xed\x61\x0c\x3d\xda\x3b\x31\x9c\xd3\x1e\xc5\xd0\xa7\xbd\x1b\xc3\x80\x76\xe2\xa3\xae\xed\x10\x21\x31\x76\x48\x21\x51\x76\x48\x22\x71\x46\xa4\x91\x48\x23\x12\x49\xac\x11\xa9\x24\xda\x88\x64\x12\x6f\x14\xb1\x8e\xa8\xcb\x3a\xa2\x1e\xeb\x88\xce\x59\x07\x75\x9f\x03\x0c\x58\x07\xf5\x1f\xe9\xa0\x06\x24\x1d\xae\x03\x49\x87\xeb\x41\xd2\xe1\xba\x90\x28\xa9\x0f\x9d\x0e\xd7\x89\x44\x4a\xbd\xe8\x74\xb8\x6e\x24\x5a\xd7\x8f\xc4\xeb\x3b\x32\xe8\x05\x7e\x0f\xfd\xde\xf1\x7b\xe4\xf6\x30\xf2\x5f\x51\xe4\x3f\xa3\xc8\x7f\x47\x51\xc7\x9f\x7b\x3b\xf7\x11\x3c\xd1\x77\xde\x6a\x81\x46\x53\xa4\x96\x26\xbf\xcc\x76\xea\x3b\xcd\xe6\x0d\x66\x20\xd2\xd4\x0d\x31\x95\x2f\xd5\x0a\x0d\x0f\xc7\x05\x62\x06\xd2\xa2\x16\x74\x3b\xa8\x1d\x6a\xba\x14\xcb\xd1\xe4\xe8\x08\x93\xc8\x4c\xa4\x25\xb1\x1f\xa0\x34\x98\x64\xb6\x6e\x56\x2b\xfc\x3e\x86\xa4\xc8\x96\x34\xba\x6a\x75\xf8\xe1\x29\xc0\x6e\xa4\x69\xba\x91\x34\x6f\x3f\x34\x55\x6e\x2e\xa0\xd4\x99\x88\xd7\x64\x12\xb5\x58\xda\x42\xa4\x80\x7f\xe1\xb2\x70\xb3\x50\x25\x20\x32\xaf\x1c\x12\x9e\xf6\x15\x87\x3f\xf1\x9a\xaa\x75\x03\x56\x0b\x72\x5e\xba\x30\x16\xf3\x53\x0f\x74\x67\xe0\x0e\xf5\xbe\xe4\x72\x77\x20\xb9\xfc\xcf\x57\xef\x0e\x89\x9a\x70\xaf\x32\x57\x2b\x95\x9d\xd0\x90\x68\xb1\x45\xb8\x3c\x8d\xee\xf8\xdf\x66\x8a\xd9\xda\x6e\xe0\x23\x04\x0f\x17\x55\x8f\x40\xad\x95\x86\x4b\x48\xd5\xba\xb9\x46\x3b\xa2\xc7\x5a\xfd\xa2\x5a\xa9\xc8\x04\x6a\xee\x94\xe9\x2b\x8e\x7b\x7e\xe6\x5e\x9d\x3d\xc0\x25\x43\xc9\xf2\x09\x30\x35\x08\x04\xf0\x34\x9f\x30\xb7\x9b\x5a\x1d\x2e\x4f\xa5\x78\xff\x9e\x4e\xe5\x74\xa9\xc0\x25\x3f\x55\x54\x1e\x03\xfd\x23\x02\x95\x37\xad\xba\x29\xb6\x0b\xd4\xb5\x7a\xc3\x1d\xaf\x88\x10\x62\x78\xce\xcf\x67\x65\x99\xe7\x0f\xee\xf9\x89\x24\x39\xf5\x4e\x31\xd5\xb6\x8c\xfc\x77\x68\x7b\xef\x2e\xf6\x5c\xe3\x4e\xe5\x70\x09\x07\xc3\xf9\x0b\x08\x27\x8b\x10\x89\xd2\x35\x42\x49\xb8\x84\xf6\x05\x48\xf8\x8d\x63\xf3\x37\xd8\x9c\xd9\x9a\x2a\x7f\xb8\x00\xf9\xe1\x43\xdd\x81\x2a\xfe\x2d\x6b\x6c\x92\xa9\xcb\x11\x27\x24\x47\xfc\x5e\x93\xf5\xa6\x55\x53\xab\x65\xb6\xae\x05\xbd\xba\xcb\x7d\xe5\x89\x16\xf3\x28\xed\x92\xed\x5d\x4a\xbc\x51\xdd\xc7\xb0\x14\x06\xe1\xec\x6a\x78\x7d\x7d\x16\xc3\xf1\xe1\xea\xf6\xd3\xe8\x2c\x3e\x04\x29\x33\x63\xe9\xf7\x2a\x97\xf8\xc4\x6f\xa7\xde\xdc\x89\xb4\xc0\xdb\x84\xeb\x7d\x30\x97\xff\xc5\x97\xd6\xd1\x0b\x6b\x2e\xe0\xfc\x8c\x7e\xa4\xac\xf7\xae\x23\x7e\xc2\xb4\xdf\xc4\x58\xf5\x9a\x7d\xf0\x3c\x13\xcf\x21\x8e\xe9\x35\x54\x78\x82\xfa\x09\x23\xb3\xbc\xb0\x07\xcc\x16\xb7\x4a\xef\x9b\x86\x7e\xfc\xd4\x7c\x5a\x1a\x87\xfc\x7c\xf0\xa1\xff\x1c\xdd\xa1\xdd\xb3\x22\x4d\x9f\x9f\xf1\x28\x79\xe3\x50\xe5\xc6\x9d\xcc\x7d\xfb\x9c\x7c\x07\xae\x0b\xd8\xce\x7b\x5b\x68\x14\xdf\x2f\x8e\x45\xfd\x34\xba\x1e\x7d\x19\xce\x46\xcf\x8a\x3b\x9d\x0d\x67\xe3\x2b\x7e\xf5\x7e\x79\xc3\x5f\x2a\xef\xcb\x66\x38\xc6\xe1\xc2\x80\x17\x5d\xf8\x66\x17\xfc\x72\x1b\xfc\x52\x1f\x1c\x6b\xfa\x4f\x14\xf5\xff\x57\xf5\x9f\x2e\xeb\x64\x34\xbb\x9f\xdc\x9c\x54\x8f\xfe\x62\xf9\x1b\x9f\x8d\x37\x7d\xbd\x74\xc1\x0b\x73\x1e\x62\xfe\xa2\x7b\xa5\xf7\x55\x61\x1b\xce\xf5\x87\x92\xf5\x0d\xbd\xd3\xd9\xed\xdd\xb1\xfd\xee\xc7\x57\xe3\xc3\x68\x79\xcf\x47\xbb\x01\xed\x37\x58\xff\x7d\xff\xf5\xee\xd3\x68\x3a\xf3\x4c\x65\x66\xf3\xe5\xe1\x4b\x5d\xa3\xbd\xbb\xaa\x9d\x4c\x42\x99\x94\x53\x50\x9a\x3b\x4a\x73\x39\x03\x0f\xe8\x14\xb3\x03\xfc\xd9\xfd\x01\x1f\xa1\xfd\x57\x17\x8f\x5c\xc7\x11\xff\x73\xc1\xfc\x3d\xe6\x88\x8f\x75\x7d\x76\x9d\x1e\xa3\x7b\x7e\x13\x31\xbe\x5a\x79\xaa\x3e\x55\xff\x17\x00\x00\xff\xff\x22\x24\x96\x88\x50\x10\x00\x00")

func evmdis_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_evmdis_tracerJs,
		"evmdis_tracer.js",
	)
}

func evmdis_tracerJs() (*asset, error) {
	bytes, err := evmdis_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "evmdis_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x94, 0x3a, 0x41, 0xf3, 0xcc, 0xc7, 0x6b, 0xc9, 0x57, 0x20, 0x4f, 0x7d, 0x7b, 0xd1, 0x7b, 0x6e, 0xa9, 0x4d, 0xf, 0x22, 0x9b, 0x44, 0x5d, 0xc9, 0x2d, 0x3, 0x92, 0xd6, 0x5, 0xcc, 0x6e, 0xaf}}
	return a, nil
}

var _noop_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x41\x6f\xdb\x46\x10\x85\xcf\xe6\xaf\x78\xc7\x04\x50\xc5\x22\xb9\x39\x45\x01\xd5\xb0\x13\x15\x8e\x6c\x48\x74\x03\x1f\x87\xe4\x50\xdc\x74\xbd\xc3\xce\xce\x4a\x21\x0c\xff\xf7\x62\x49\x09\x09\xd0\xa0\xc9\x4d\xa0\xf8\xbe\xf7\x66\xde\xb0\x2c\x71\x25\xc3\xa8\x6e\xdf\x1b\xde\xfc\xfa\xe6\x2d\xea\x11\xd6\x33\x56\xc9\x7a\xd1\x58\x94\x25\xaa\xde\x45\x74\xce\x33\x5c\xc4\x40\x6a\x90\x6e\x7a\x67\x2f\xbf\x34\xa2\x0c\xef\x6a\x25\x1d\x97\x45\x59\xce\xef\xff\xe7\xaf\xac\xec\x94\x19\x51\x3a\x3b\x92\xf2\x25\x46\x49\x68\x28\x40\xb9\x75\xd1\xd4\xd5\xc9\x18\xce\x40\xa1\x2d\x45\xf1\x24\xad\xeb\xc6\x8c\x73\x86\x14\x5a\xd6\xc9\xd2\x58\x9f\xe2\xd9\xff\xfd\xe6\x01\xb7\x1c\x23\x2b\xde\x73\x60\x25\x8f\xfb\x54\x7b\xd7\xe0\xd6\x35\x1c\x22\x83\x22\x86\xfc\x24\xf6\xdc\xa2\x9e\x70\x59\x78\x93\xa3\xec\x4e\x51\x70\x23\x29\xb4\x64\x4e\xc2\x02\xec\xac\x67\xc5\x81\x35\x3a\x09\x78\x7b\xb6\x3a\x01\x17\x10\xcd\x90\x57\x64\x79\x00\x85\x0c\x59\xf7\x1a\x14\x46\x78\xb2\xaf\xd2\x1f\x2c\xe3\xeb\xcc\x2d\x5c\x98\x2c\x7a\x19\x18\xd6\x93\xe5\x89\x8f\xce\x7b\xd4\x8c\x14\xb9\x4b\x7e\x91\x49\x75\x32\x7c\x5a\x57\x1f\xee\x1e\x2a\xac\x36\x8f\xf8\xb4\xda\x6e\x57\x9b\xea\xf1\x1d\x8e\xce\x7a\x49\x06\x3e\xf0\x8c\x72\x4f\x83\x77\xdc\xe2\x48\xaa\x14\x6c\x84\x74\x99\xf0\xf1\x7a\x7b\xf5\x61\xb5\xa9\x56\x7f\xac\x6f\xd7\xd5\x23\x44\x71\xb3\xae\x36\xd7\xbb\x1d\x6e\xee\xb6\x58\xe1\x7e\xb5\xad\xd6\x57\x0f\xb7\xab\x2d\xee\x1f\xb6\xf7\x77\xbb\xeb\x25\x76\x9c\x53\x71\xd6\xff\x78\xdf\xdd\xd4\x9c\x32\x5a\x36\x72\x3e\x9e\xb7\xf0\x28\x09\xb1\x97\xe4\x5b\xf4\x74\x60\x28\x37\xec\x0e\xdc\x82\xd0\xc8\x30\xfe\x74\xa1\x99\x45\x5e\xc2\x7e\x9a\xf9\xbb\x47\x88\x75\x87\x20\xb6\x40\x64\xc6\x6f\xbd\xd9\x70\x59\x96\xc7\xe3\x71\xb9\x0f\x69\x29\xba\x2f\xfd\x8c\x8a\xe5\xef\xcb\x22\xf3\x82\xc8\x50\x29\x35\xac\xb9\x98\xcf\x29\xda\xc4\xad\x49\xb9\x96\xc0\xa8\xc5\x79\xd6\x21\xb7\x8b\x46\xda\x1c\xfe\x9f\xe4\x94\x5b\x74\x2a\x4f\x20\xfc\x49\x07\xda\x35\xea\x06\xcb\x38\xa9\x3f\x73\x63\x30\x99\xeb\xa3\xda\x4f\x67\x48\x30\xa5\x10\xa9\xc9\xf7\x92\x7f\x37\xac\xcb\xe2\xb9\xb8\x28\x4b\x44\xe3\x21\x7b\xbb\x70\x90\xbf\x33\x57\x34\x77\xa9\x23\x64\x98\x1c\xa7\xab\xc8\xa1\xfe\xfa\x08\xfe\xc2\x4d\x32\x8e\xcb\xe2\x22\xeb\x2e\xd1\xa5\x30\x41\x5f\x79\xd9\x2f\xd0\xd6\xaf\xf1\x8c\x97\x45\x31\x91\x3b\x4a\xde\xbe\x45\x1f\xfb\xd3\x89\x50\x63\x89\xfc\x89\x96\x23\x49\x07\x0a\x67\xc3\x6e\x2e\xef\x62\xd2\xff\xbf\x85\x72\xfc\x9e\x07\x79\x3f\xf9\xcc\xc0\x38\xd7\x5e\x33\x07\x38\x63\xa5\x7c\xf7\x72\x60\xcd\x9f\x3b\x94\x2d\x69\x88\x13\x2e\x6b\x3a\x17\xc8\x9f\xc1\xa7\xd3\xc8\x1b\x73\x61\xbf\x2c\x2e\xe6\xe7\xdf\x84\x6a\xec\xcb\x39\xd4\x4c\xc2\xf3\xcb\x3b\xbc\x14\x2f\xc5\xbf\x01\x00\x00\xff\xff\x2d\x5d\xed\xd0\xde\x04\x00\x00")

func noop_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_noop_tracerJs,
		"noop_tracer.js",
	)
}

func noop_tracerJs() (*asset, error) {
	bytes, err := noop_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "noop_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0x87, 0xf0, 0x62, 0xb5, 0xe9, 0xa0, 0x33, 0x37, 0x62, 0x0, 0xf8, 0xcc, 0x2b, 0xf0, 0xf0, 0x80, 0x71, 0xf1, 0x78, 0xfc, 0x54, 0x22, 0x73, 0x86, 0xb7, 0x86, 0x63, 0x53, 0xf7, 0xa0, 0x70}}
	return a, nil
}

var _opcount_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\xcf\x6e\xdb\x46\x10\x87\xcf\xe2\x53\xfc\x8e\x09\xa2\x92\x41\x72\x73\x8b\x02\xac\x61\x27\x02\x6c\xd9\x90\xe8\x04\x3e\x2e\xc9\xa1\xb8\xcd\x6a\x97\x98\x9d\x95\x42\x04\x7e\xf7\x62\x97\x64\x63\xb4\x06\x9c\xeb\x6a\xe6\xfb\xe6\x1f\x55\x14\xb8\x74\xc3\xc8\xfa\xd0\x0b\x3e\xbc\xff\xf0\x11\xf5\x08\xe9\x09\x65\x90\xde\xb1\xcf\x8a\x02\x55\xaf\x3d\x3a\x6d\x08\xda\x63\x50\x2c\x70\x5d\x8a\x39\xb8\xdf\x1a\xc7\x04\xa3\x6b\x56\x3c\xe6\x59\x51\x4c\xf1\xff\xfb\x29\x66\x76\x4c\x04\xef\x3a\x39\x2b\xa6\x0b\x8c\x2e\xa0\x51\x16\x4c\xad\xf6\xc2\xba\x0e\x42\xd0\x02\x65\xdb\xc2\x31\x8e\xae\xd5\xdd\x18\x71\x5a\x10\x6c\x4b\x9c\x94\x42\x7c\xf4\x8b\xff\xd3\xf6\x01\x37\xe4\x3d\x31\x3e\x91\x25\x56\x06\xf7\xa1\x36\xba\xc1\x8d\x6e\xc8\x7a\x82\xf2\x18\xe2\x8b\xef\xa9\x45\x9d\x70\x31\xf1\x3a\x96\xb2\x9f\x4b\xc1\xb5\x0b\xb6\x55\xa2\x9d\x5d\x83\xb4\xf4\xc4\x38\x11\x7b\xed\x2c\x3e\x2e\xaa\x19\xb8\x86\xe3\x08\x79\xa3\x24\x36\xc0\x70\x43\xcc\x7b\x0b\x65\x47\x18\x25\x3f\x53\x5f\x19\xc6\xcf\x9e\x5b\x68\x9b\x14\xbd\x1b\x08\xd2\x2b\x89\x1d\x9f\xb5\x31\xa8\x09\xc1\x53\x17\xcc\x3a\x92\xea\x20\xf8\xba\xa9\x3e\xdf\x3d\x54\x28\xb7\x8f\xf8\x5a\xee\x76\xe5\xb6\x7a\xfc\x1d\x67\x2d\xbd\x0b\x02\x3a\xd1\x84\xd2\xc7\xc1\x68\x6a\x71\x56\xcc\xca\xca\x08\xd7\x45\xc2\xed\xd5\xee\xf2\x73\xb9\xad\xca\xbf\x36\x37\x9b\xea\x11\x8e\x71\xbd\xa9\xb6\x57\xfb\x3d\xae\xef\x76\x28\x71\x5f\xee\xaa\xcd\xe5\xc3\x4d\xb9\xc3\xfd\xc3\xee\xfe\x6e\x7f\x95\x63\x4f\xb1\x2a\x8a\xf9\xaf\xcf\xbb\x4b\x9b\x63\x42\x4b\xa2\xb4\xf1\xcb\x14\x1e\x5d\x80\xef\x5d\x30\x2d\x7a\x75\x22\x30\x35\xa4\x4f\xd4\x42\xa1\x71\xc3\xf8\xcb\x0b\x8d\x2c\x65\x9c\x3d\xa4\x9e\x5f\x3c\x42\x6c\x3a\x58\x27\x6b\x78\x22\xfc\xd1\x8b\x0c\x17\x45\x71\x3e\x9f\xf3\x83\x0d\xb9\xe3\x43\x61\x26\x94\x2f\xfe\xcc\xb3\xc8\x73\x43\xe3\x82\x95\x8a\x55\x43\x1c\x77\xa3\xe0\xd5\x71\x30\x04\x99\x9e\xd2\x4e\xfe\x0e\x5e\x90\x02\x7d\xd2\xda\x70\xac\x89\x63\xe1\xda\x7a\xe1\xd0\xc4\x3b\x48\x9f\x0b\x7d\xa7\x26\xed\x75\xfe\x92\x2e\xbf\xdc\xa2\xa6\x2e\xd6\x98\x2e\x98\x95\xf5\x2a\x85\xa7\x6b\xd6\x56\x09\xb5\x79\xf6\x23\x5b\x15\xc5\x64\x48\xe2\x6f\xff\xf5\x44\xce\x73\xd7\xbf\xa2\x3c\x5b\xa5\xb4\x0b\xbc\x5f\x67\x89\xe2\x85\x86\xd8\x89\xb6\x27\xf7\x8d\xda\xb4\x16\x3a\x11\x8f\xa9\xd9\x76\x3e\xb3\x88\xff\x72\xbb\x60\x7c\x9e\xad\x62\xde\x05\xba\x60\x93\xe1\x8d\x71\x87\x35\xda\xfa\x2d\x7e\x40\x7a\xed\xf3\x64\x79\xf7\x0e\x4f\xb3\xa6\x53\xc1\xc8\x73\xcf\xb9\x9f\x0f\x50\x35\x12\x94\x99\xd1\xb1\x53\xd7\x41\xd9\xc5\xde\x4d\xa7\xb1\x4a\xf9\x2f\xfb\x16\x05\x93\x7f\xc9\xa1\x8c\x49\x9e\x09\xe8\xa7\xa3\xaa\x89\x2c\xb4\x10\xc7\x81\xc2\x9d\x88\xe3\x9f\x09\x98\x24\xb0\xf5\x09\x17\x73\x3a\x6d\x95\x59\xc0\xf3\xe1\xc5\x81\x6b\x7b\xc8\xb3\xd5\xf4\xfe\xac\xa8\x46\xbe\x2f\x45\x4d\xa4\x67\xb3\xc0\x53\xf6\x94\xfd\x13\x00\x00\xff\xff\x28\x45\x74\x98\x43\x05\x00\x00")

func opcount_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_opcount_tracerJs,
		"opcount_tracer.js",
	)
}

func opcount_tracerJs() (*asset, error) {
	bytes, err := opcount_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "opcount_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe8, 0xac, 0x59, 0x67, 0xc6, 0xd4, 0xc6, 0x88, 0xcf, 0x41, 0xb3, 0x82, 0x3a, 0xbb, 0xbe, 0x5c, 0x2d, 0xa7, 0xca, 0x42, 0xa7, 0xde, 0x71, 0x68, 0x62, 0x89, 0x47, 0x33, 0xbb, 0x16, 0xed, 0x3f}}
	return a, nil
}

var _prestate_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\xdd\x6f\xdb\x38\x12\x7f\x96\xfe\x8a\x41\x5f\x6c\xa3\xae\xdc\x64\x81\x3d\xc0\xb9\x1c\xa0\xba\x6e\x1b\x20\x9b\x04\xb6\x7b\xb9\xdc\x62\x1f\x28\x72\x24\x73\x4d\x93\x02\x49\xd9\xf1\x15\xf9\xdf\x0f\x43\x7d\xf8\xa3\x49\xd3\xdd\x37\x9b\x1c\xfe\xe6\xfb\x37\xa3\xd1\x08\x26\xa6\xdc\x59\x59\x2c\x3d\x9c\xbf\x3f\xfb\x07\x64\x3b\xf0\x4b\x84\xb4\xf2\x4b\x63\x5d\x3c\x1a\xc1\x62\x29\x1d\xe4\x52\x21\x48\x07\x25\xb3\x1e\x4c\x1e\x64\x0a\xf3\x8e\x1b\x8b\xa0\x64\x66\x99\xdd\x25\xf1\x68\x54\xcb\x7f\x77\x45\x2f\x73\x8b\x08\xce\xe4\x7e\xcb\x2c\x8e\x61\x67\x2a\xe0\x4c\x83\x45\x21\x9d\xb7\x32\xab\x3c\x82\xf4\xc0\xb4\x18\x19\x0b\x6b\x23\x64\xbe\x23\x38\xe9\xa1\xd2\x02\x6d\x50\xe9\xd1\xae\x5d\xab\xff\xf3\xcd\x57\xb8\x46\xe7\xd0\xc2\x67\xd4\x68\x99\x82\xbb\x2a\x53\x92\xc3\xb5\xe4\xa8\x1d\x02\x73\x50\xd2\x89\x5b\xa2\x80\x2c\xc0\xd1\xc3\x4f\x64\xca\xbc\x31\x05\x3e\x99\x4a\x0b\xe6\xa5\xd1\x43\x40\xe9\x97\x68\x61\x83\xd6\x49\xa3\xe1\x97\x56\x55\x03\x38\x04\x63\x09\xa4\xcf\x3c\x39\x60\xc1\x94\xf4\x6e\x00\x4c\xef\x40\x31\xbf\x7f\xfa\x4a\x30\xf6\x3e\x0b\x90\x3a\xa8\x58\x9a\x12\xc1\x2f\x99\x27\x8f\xb7\x52\x29\xc8\x10\x2a\x87\x79\xa5\x86\x84\x94\x55\x1e\xee\xaf\x16\x5f\x6e\xbf\x2e\x20\xbd\x79\x80\xfb\x74\x36\x4b\x6f\x16\x0f\x17\xb0\x95\x7e\x69\x2a\x0f\xb8\xc1\x1a\x4a\xae\x4b\x25\x51\xc0\x96\x59\xcb\xb4\xdf\x81\xc9\x09\xe1\xb7\xe9\x6c\xf2\x25\xbd\x59\xa4\x1f\xae\xae\xaf\x16\x0f\x60\x2c\x7c\xba\x5a\xdc\x4c\xe7\x73\xf8\x74\x3b\x83\x14\xee\xd2\xd9\xe2\x6a\xf2\xf5\x3a\x9d\xc1\xdd\xd7\xd9\xdd\xed\x7c\x9a\xc0\x1c\xc9\x2a\xa4\xf7\xaf\xc7\x3b\x0f\x99\xb3\x08\x02\x3d\x93\xca\xb5\x51\x78\x30\x15\xb8\xa5\xa9\x94\x80\x25\xdb\x20\x58\xe4\x28\x37\x28\x80\x01\x37\xe5\xee\xa7\x13\x4a\x58\x4c\x19\x5d\x04\x9f\x9f\x2d\x42\xb8\xca\x41\x1b\x3f\x04\x87\x08\xff\x5c\x7a\x5f\x8e\x47\xa3\xed\x76\x9b\x14\xba\x4a\x8c\x2d\x46\xaa\x86\x72\xa3\x7f\x25\x31\xe1\x95\x16\x9d\x67\x1e\x17\x96\x71\xb4\x60\x2a\x5f\x56\xde\x81\xab\xf2\x5c\x72\x89\xda\x83\xd4\xb9\xb1\xeb\x50\x21\xe0\x0d\x70\x8b\xcc\x23\x30\x50\x86\x33\x05\xf8\x88\xbc\x0a\x77\x75\x94\x43\x99\x5a\xa6\x1d\xe3\xe1\x34\xb7\x66\x4d\x7e\x56\xce\xd3\x0f\xe7\x70\x9d\x29\x14\x50\xa0\x46\x27\x1d\x64\xca\xf0\x55\x12\x7f\x8b\xa3\x03\x63\xa8\x46\x82\x77\x8d\x50\xa8\x8b\x2d\xf6\x2c\x42\x56\x49\x25\xa4\x2e\x92\x38\x6a\xa5\xc7\xa0\x2b\xa5\x86\x71\x80\x50\xc6\xac\xaa\x32\xe5\xdc\x54\xc1\xf6\x3f\x91\xfb\x1a\xcc\x95\xc8\x65\x4e\x85\xc1\xba\x5b\x6f\xc2\x55\xa7\xd7\x64\x24\x9f\xc4\xd1\x11\xcc\x18\xf2\x4a\x07\x77\xfa\x4c\x08\x3b\x04\x91\x0d\xbe\xc5\x51\xb4\x61\x96\xb0\xe0\x12\xbc\xf9\x82\x8f\xe1\x72\x70\x11\x47\x91\xcc\xa1\xef\x97\xd2\x25\x2d\xf0\xef\x8c\xf3\x3f\xe0\xf2\xf2\x32\x34\x73\x2e\x35\x8a\x01\x10\x44\xf4\x9c\x58\x7d\x13\x65\x4c\x31\xcd\x71\x0c\xbd\xf7\x8f\x3d\x78\x0b\x22\x4b\x0a\xf4\x1f\xea\xd3\x5a\x59\xe2\xcd\xdc\x5b\xa9\x8b\xfe\xd9\xaf\x83\x61\x78\xa5\x4d\x78\x03\x8d\xf8\x8d\xe9\x84\xeb\x7b\x6e\x44\xb8\x6e\x6c\xae\xa5\x26\x46\x34\x42\x8d\x94\xf3\xc6\xb2\x02\xc7\xf0\xed\x89\xfe\x3f\x91\x57\x4f\x71\xf4\x74\x14\xe5\x79\x2d\xf4\x42\x94\x1b\x08\x40\xed\x6d\x57\xe3\x85\xa4\x2e\x3d\x4c\x40\xc0\xfb\x51\x12\xe6\xad\x29\x27\x49\x58\xe1\xee\xf5\x4c\xd0\x85\x14\x8f\xdd\xc5\x0a\x77\x83\x8b\xf8\xc5\x14\x25\x8d\xd1\xbf\x4b\xf1\xf8\xb3\xf9\x3a\x79\x73\x14\xd7\x39\x49\xed\xed\x1d\x0c\x4e\xe2\x68\xd1\x55\xca\x53\xb9\x4b\xbd\x31\x2b\x22\xad\x25\xc5\x47\xa9\x10\x12\x53\x52\xb6\x5c\xcd\x1a\x19\xa2\x06\xe9\xd1\x32\xa2\x4d\xb3\x41\x4b\xd3\x02\x2c\xfa\xca\x6a\xd7\x85\x31\x97\x9a\xa9\x16\xb8\x89\xba\xb7\x8c\xd7\x3d\x53\x9f\x1f\xc4\x92\xfb\xc7\x10\xc5\xe0\xdd\x68\x04\xa9\x07\x72\x11\x4a\x23\xb5\x1f\xc2\x16\x41\x23\x0a\x6a\x7c\x81\xa2\xe2\x3e\xe0\xf5\x36\x4c\x55\xd8\xab\x9b\x9b\xe8\x31\x3c\x35\x15\x4d\x80\x83\xe6\x1f\x06\x03\xd7\x66\x13\x46\x5b\xc6\xf8\x0a\x9a\x86\x33\x56\x16\x52\xc7\x4d\x38\x8f\x9a\x8d\x2c\x4a\x08\x38\x98\x15\x72\x45\x49\xa4\x93\x0f\x4c\xc1\x25\x64\xb2\xb8\xd2\xfe\x24\x79\x75\xd0\xdb\xa7\x83\x3f\x92\xa6\x79\x12\x47\x84\xd7\x3f\x1f\x0c\xe1\xec\xd7\xae\x22\xbc\x21\x28\x78\x1d\xcc\x9b\x97\xa1\xe2\xd3\x62\x78\xfe\x59\x50\x43\x1d\xfc\x36\x68\x4d\x5c\x95\x51\x3a\x6a\x3f\x43\x1c\x8f\xbb\xf8\xe2\x07\xb8\xc7\xbe\xb5\xb8\x4d\x68\x12\x26\xc4\xcb\xa0\x75\x8a\x3e\x22\xb7\xb8\x26\x56\xa7\x2c\x70\xa6\x14\xda\x9e\x83\xc0\x19\xc3\xa6\x9c\x42\xbe\x70\x5d\xfa\x5d\xcb\xf5\x9e\xd9\x02\xbd\x7b\xdd\xb0\x80\xf3\xee\x5d\x4b\x81\x21\x14\xbb\x12\xe1\xf2\x12\x7a\x93\xd9\x34\x5d\x4c\x7b\x4d\x1b\x8d\x46\x70\x8f\x61\x03\xca\x94\xcc\x84\xda\x81\x40\x85\x1e\x6b\xbb\x8c\x0e\x21\xea\x28\x61\x48\xab\x0c\x2d\x19\xf8\x28\x9d\x97\xba\x80\x9a\x29\xb6\x34\x53\x1b\xb8\xd0\x23\x9c\x55\x8e\xaa\xf5\x64\x08\x79\x43\xdb\x84\x45\xe2\x15\xe2\xff\xd0\x6e\x4c\xc9\x6e\xfb\xc8\xa5\x75\x1e\x4a\xc5\x38\x26\x84\xd7\x19\xf3\x72\x7e\x9b\x4e\x26\xd5\xb3\xd0\x82\x01\x68\x3f\xe0\x98\xa2\x01\x49\xea\x1d\xf4\x5b\x8c\x41\x1c\x45\xb6\x95\x3e\xc0\xbe\xd8\x53\x82\xf3\x58\x1e\x12\x02\x2d\x15\xb8\x41\xa2\xd0\xc0\x06\xf5\x30\x24\x5d\xff\xfe\xad\x99\xbe\xe8\x92\x38\xa2\x77\x07\x7d\xad\x4c\x71\xdc\xd7\xa2\x0e\x0b\xaf\xac\xa5\xfc\x77\x14\x9c\x53\x8f\xff\x59\x39\x4f\x31\xb5\x14\x9e\x86\x2d\x9e\x23\xc9\x40\x89\x34\x6d\x07\xdf\x93\x21\xcd\xad\x30\x27\x48\x5d\x33\xa5\xea\x4d\xae\x34\x1e\xb5\x97\x4c\xa9\x1d\xe5\x61\x6b\x69\x85\x59\xa2\xc5\x21\x38\x49\x52\x81\x71\x82\xa8\xd4\x5c\x55\xa2\x2e\x83\x50\xc7\x0d\x9e\x0b\x36\x1f\xef\x3e\x6b\x74\x8e\x15\x98\x50\x25\xe5\xf2\xb1\xd9\x1e\x35\xf4\x6a\x92\xeb\x0f\x7a\x49\x67\xe4\x31\xc5\x28\x53\x24\x6d\x91\x11\x4d\xa7\x42\x58\x74\xae\x3f\x68\x38\xa7\xcb\xec\xfd\x12\x35\x05\x1f\x34\x6e\xa1\x5b\x4d\x18\xe7\xb4\xa6\x89\x21\x30\x21\x88\xda\x4e\xd6\x88\x38\x8a\xdc\x56\x7a\xbe\x84\xa0\xc9\x94\xfb\x5e\x1c\x34\xf5\xcf\x99\x43\x78\x33\xfd\xcf\x62\x72\xfb\x71\x3a\xb9\xbd\x7b\x78\x33\x86\xa3\xb3\xf9\xd5\x7f\xa7\xdd\xd9\x87\xf4\x3a\xbd\x99\x4c\xdf\x8c\xc3\x6c\x7e\xc6\x21\x6f\x5a\x17\x48\xa1\xf3\x8c\xaf\x92\x12\x71\xd5\x7f\x7f\xcc\x03\x7b\x07\xa3\x28\xb3\xc8\x56\x17\x7b\x63\xea\x06\x6d\x74\xb4\x94\x0b\x97\xf0\x62\xb0\x2e\x5e\xb6\x66\xd2\xc8\xf7\x5b\x22\xdf\xaf\x22\x81\x2a\x5e\xb7\xe3\xfc\x2f\x1b\x12\x7a\x87\xf1\xd5\x18\x1c\x53\xb4\x01\xcb\xff\xd1\x17\x4b\x9e\x3b\xf4\x43\x40\x2d\xcc\x96\x98\xaf\x43\xad\x6f\x1a\xdc\x83\x90\x9d\x0d\x6a\x06\xbd\xcd\xfb\x83\x4e\x98\xc0\xbe\x17\x3d\x7f\x4e\x14\xb5\x80\xcb\x16\xfd\x6d\x78\xf9\x7a\xa0\xce\x9b\x48\x9d\x28\xf8\xe5\x64\xc3\x0b\xf7\x6b\x5c\x1b\xbb\x6b\xc6\xd1\x81\x7f\x3f\x8e\x6a\x7a\x7d\xdd\xd5\x13\xfd\xa1\x22\xeb\x0e\x3e\x4e\xaf\xa7\x9f\xd3\xc5\xf4\x48\x6a\xbe\x48\x17\x57\x93\xfa\xe8\x2f\x17\xde\xd9\x4f\x17\x5e\x6f\x3e\x5f\xdc\xce\xa6\xbd\x71\xf3\xef\xfa\x36\xfd\xd8\xfb\x4e\x61\xb3\x05\xfe\xa8\x75\xbd\xb9\x37\x56\xfc\x9d\x0e\x38\xd8\xc8\x72\xf6\xdc\x42\x16\xa8\x9d\xfb\xea\xe4\x83\x07\x98\x6e\x59\x39\xaf\x3f\xf8\xa2\xf0\xfe\x59\x1e\x7e\x8a\x9f\xe2\xff\x07\x00\x00\xff\xff\x07\xa1\x99\x4b\x71\x10\x00\x00")

func prestate_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_prestate_tracerJs,
		"prestate_tracer.js",
	)
}

func prestate_tracerJs() (*asset, error) {
	bytes, err := prestate_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prestate_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xef, 0x9d, 0xc7, 0x88, 0x23, 0xf5, 0xb4, 0xa0, 0xb1, 0x96, 0xc4, 0x22, 0x3b, 0xd0, 0xb9, 0xe9, 0xf3, 0x6c, 0xdc, 0xb0, 0x3e, 0x7c, 0x48, 0xf7, 0x2f, 0xf3, 0x7d, 0xfb, 0x46, 0xb2, 0xd5, 0xc6}}
	return a, nil
}

var _trigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x4f\x6f\xe3\x36\x10\xc5\xef\xfe\x14\xaf\x27\x27\x88\xd7\x4a\xda\x4b\xe1\xd4\x05\xdc\x6c\xb2\x6b\x20\x6b\x07\xb6\xd3\x45\x10\xe4\x40\x4b\x23\x89\x08\x4d\x0a\xc3\x91\xbd\x42\x90\xef\x5e\x50\x92\xff\xa5\x46\xb7\x3e\x19\x9c\x79\xbf\x79\x33\x1c\x31\x8a\x70\xe3\x8a\x8a\x75\x96\x0b\x7e\xbd\xbc\xfa\x1d\xcb\x0a\x92\x13\x46\xa5\xe4\x8e\x7d\x27\x8a\xb0\xc8\xb5\x47\xaa\x0d\x41\x7b\x14\x8a\x05\x2e\xad\x73\x32\xf7\x29\x76\x4c\x30\x7a\xc9\x8a\xab\x7e\x27\x8a\x9a\xfc\x7f\x85\x82\x32\x65\x22\x78\x97\xca\x46\x31\x0d\x50\xb9\x12\xb1\xb2\x60\x4a\xb4\x17\xd6\xcb\x52\x08\x5a\xa0\x6c\x12\x39\xc6\xca\x25\x3a\xad\x02\x4e\x0b\x4a\x9b\x10\xd7\x25\x85\x78\xe5\xb7\xf5\xbf\x4c\x1e\x71\x4f\xde\x13\xe3\x0b\x59\x62\x65\xf0\x50\x2e\x8d\x8e\x71\xaf\x63\xb2\x9e\xa0\x3c\x8a\x70\xe2\x73\x4a\xb0\xac\x71\x41\x78\x17\xac\xcc\x5b\x2b\xb8\x73\xa5\x4d\x94\x68\x67\x7b\x20\x2d\x39\x31\xd6\xc4\x5e\x3b\x8b\xdf\xb6\xa5\x5a\x60\x0f\x8e\x03\xe4\x4c\x49\x68\x80\xe1\x8a\xa0\x3b\x87\xb2\x15\x8c\x92\xbd\xf4\x27\xc3\xd8\xf7\x9c\x40\xdb\xba\x44\xee\x0a\x82\xe4\x4a\x42\xc7\x1b\x6d\x0c\x96\x84\xd2\x53\x5a\x9a\x5e\x20\x2d\x4b\xc1\xf7\xf1\xe2\xeb\xf4\x71\x81\xd1\xe4\x09\xdf\x47\xb3\xd9\x68\xb2\x78\xba\xc6\x46\x4b\xee\x4a\x01\xad\xa9\x41\xe9\x55\x61\x34\x25\xd8\x28\x66\x65\xa5\x82\x4b\x03\xe1\xdb\xed\xec\xe6\xeb\x68\xb2\x18\xfd\x35\xbe\x1f\x2f\x9e\xe0\x18\x77\xe3\xc5\xe4\x76\x3e\xc7\xdd\x74\x86\x11\x1e\x46\xb3\xc5\xf8\xe6\xf1\x7e\x34\xc3\xc3\xe3\xec\x61\x3a\xbf\xed\x63\x4e\xc1\x15\x05\xfd\xcf\xe7\x9d\xd6\x37\xc7\x84\x84\x44\x69\xe3\xb7\x53\x78\x72\x25\x7c\xee\x4a\x93\x20\x57\x6b\x02\x53\x4c\x7a\x4d\x09\x14\x62\x57\x54\xff\xfb\x42\x03\x4b\x19\x67\xb3\xba\xe7\x93\x4b\x88\x71\x0a\xeb\xa4\x07\x4f\x84\x3f\x72\x91\x62\x10\x45\x9b\xcd\xa6\x9f\xd9\xb2\xef\x38\x8b\x4c\x83\xf2\xd1\x9f\xfd\x4e\xe7\xad\x03\x00\x51\x84\x5c\x7b\x09\x17\x13\x90\x2b\x55\xd4\x8e\x58\x67\xac\x56\x88\x5d\x69\x85\xd8\xd7\xa9\x21\x6f\x80\xb7\xf7\xde\x56\x68\x94\x97\x69\x11\xa4\xe1\x1f\x5c\x41\x5c\xef\x52\x1d\x6f\x82\x7e\x80\xe7\x6e\xb7\xd7\xed\xbe\xf4\x76\xa7\x9f\xa9\x90\x7c\x80\xcb\xe6\xa4\x65\x79\xa1\x9a\xa4\xed\xda\xbd\x52\x52\x8f\x93\xd6\xc4\x15\x5c\x11\xbb\xa4\x5d\x8f\x60\xf1\xef\x6f\xa0\x1f\x14\x97\x42\xbe\x5f\x13\x82\x74\x80\xb4\xb4\x71\x28\x7e\x66\x5c\xd6\x43\xb2\x3c\xc7\xdb\x8e\xbf\x56\x8c\x24\x54\xc5\x10\xc6\x65\xfd\x8c\x1a\x13\x67\xe7\xd7\xbb\x1c\x9d\xe2\xac\xc9\xf9\x65\x08\xc9\xb5\xef\xef\xbc\x9e\xef\x49\xe1\xb7\x0b\x4e\x0b\x8f\xe1\xb6\xbf\xeb\xd3\x39\x9f\xdb\xb2\x35\xfa\x38\x87\x49\x4a\xb6\xfb\xb3\xf7\x23\xbf\xae\x68\xcd\xba\xa2\x2f\x6e\x2e\xac\x6d\x76\xe8\x37\xe4\xbc\x52\x85\xe1\x91\x9f\xe7\xcb\x97\x8b\xee\xa7\xee\xc5\xd1\xd9\x55\x73\xe6\x8a\xe3\x6e\xeb\x9c\x70\xa9\xcf\xaf\x54\xbd\x9c\x6a\x72\x17\xbc\xb8\x38\x65\x93\x8c\x27\xfc\x97\x0c\x43\x5c\x9d\x12\x7e\x70\xfc\xb1\x87\xab\x83\x61\x7e\x08\x60\x88\x6d\x1b\xfb\x3d\x4c\x55\x69\xe4\x70\x79\x36\x79\xfb\x1a\xa8\x58\x4a\x65\xda\x7d\x09\xaf\x9a\x4b\xa1\xec\x76\xa5\xd2\xe6\x3b\x0d\x94\x1a\x71\x72\x89\xf6\x65\x98\xfc\xa9\x3a\xca\x98\xba\x56\x03\xf5\xcd\x57\xbe\x24\xb2\xd0\x12\x3e\x08\x4a\xe0\xd6\xc4\xe1\x75\x6f\xaf\xdc\x6f\x89\x41\x96\x6a\xab\xcc\x96\xdd\x3e\x06\xc2\x2a\xd6\x36\x6b\xac\x35\xa1\x03\x6f\xb1\xfc\x38\x5c\xee\x86\xb9\x9f\xfc\x6e\x3a\xef\x9d\x7f\x02\x00\x00\xff\xff\xbe\x2e\x63\x69\xe3\x06\x00\x00")

func trigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_trigram_tracerJs,
		"trigram_tracer.js",
	)
}

func trigram_tracerJs() (*asset, error) {
	bytes, err := trigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0x83, 0xd9, 0xa6, 0x51, 0x46, 0x23, 0x4a, 0x33, 0x2, 0xd6, 0x16, 0x56, 0x16, 0xe, 0x26, 0x7a, 0xd1, 0x7c, 0xfb, 0x31, 0xd5, 0x39, 0x44, 0x44, 0x16, 0xcb, 0x6c, 0x9a, 0x6e, 0xdd, 0x9a}}
	return a, nil
}

var _unigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdb\x46\x10\xbd\xeb\x57\xbc\xa3\x8c\xa8\xa2\x9b\xdc\x94\x26\x80\x6a\xd8\x89\x00\x47\x36\x24\xb9\x81\x51\xf4\xb0\x24\x87\xe2\xa2\xab\x1d\x62\x76\x56\x0a\x11\xe8\xbf\x17\x4b\x8a\x96\x9b\x1a\x75\x78\x12\x34\xef\x63\xe6\xcd\x90\x59\x86\x2b\x6e\x5a\xb1\xdb\x5a\xf1\xf6\xf2\xed\x3b\xe4\x2d\xb4\x26\xcc\xa3\xd6\x2c\x61\x94\x65\xd8\xd4\x36\xa0\xb2\x8e\x60\x03\x1a\x23\x0a\xae\x3a\xcc\x96\x7f\x29\x58\x08\xce\xe6\x62\xa4\x9d\x8e\xb2\xac\xc7\xff\xa7\x94\x98\x95\x10\x21\x70\xa5\x07\x23\x34\x43\xcb\x11\x85\xf1\x10\x2a\x6d\x50\xb1\x79\x54\x82\x55\x18\x5f\x66\x2c\xd8\x71\x69\xab\x36\xc9\x59\x45\xf4\x25\x49\x67\xa9\x24\xbb\x30\xf8\x7f\x5a\x3e\xe0\x96\x42\x20\xc1\x27\xf2\x24\xc6\xe1\x3e\xe6\xce\x16\xb8\xb5\x05\xf9\x40\x30\x01\x4d\xfa\x27\xd4\x54\x22\xef\xe4\x12\xf1\x26\xb5\xb2\x3e\xb5\x82\x1b\x8e\xbe\x34\x6a\xd9\x4f\x40\x56\x6b\x12\xec\x49\x82\x65\x8f\x77\x83\xd5\x49\x70\x02\x96\x24\x32\x36\x9a\x06\x10\x70\x93\x78\x17\x30\xbe\x85\x33\x7a\xa6\xbe\x12\xc6\x79\xe6\x12\xd6\x77\x16\x35\x37\x04\xad\x8d\xa6\x89\x0f\xd6\x39\xe4\x84\x18\xa8\x8a\x6e\x92\x94\xf2\xa8\xf8\xba\xd8\x7c\xbe\x7b\xd8\x60\xbe\x7c\xc4\xd7\xf9\x6a\x35\x5f\x6e\x1e\xdf\xe3\x60\xb5\xe6\xa8\xa0\x3d\xf5\x52\x76\xd7\x38\x4b\x25\x0e\x46\xc4\x78\x6d\xc1\x55\x52\xf8\x72\xbd\xba\xfa\x3c\x5f\x6e\xe6\xbf\x2f\x6e\x17\x9b\x47\xb0\xe0\x66\xb1\x59\x5e\xaf\xd7\xb8\xb9\x5b\x61\x8e\xfb\xf9\x6a\xb3\xb8\x7a\xb8\x9d\xaf\x70\xff\xb0\xba\xbf\x5b\x5f\x4f\xb1\xa6\xd4\x15\x25\xfe\xeb\x79\x57\xdd\xe6\x84\x50\x92\x1a\xeb\xc2\x90\xc2\x23\x47\x84\x9a\xa3\x2b\x51\x9b\x3d\x41\xa8\x20\xbb\xa7\x12\x06\x05\x37\xed\x4f\x2f\x34\x69\x19\xc7\x7e\xdb\xcd\xfc\xe2\x11\x62\x51\xc1\xb3\x4e\x10\x88\xf0\x5b\xad\xda\xcc\xb2\xec\x70\x38\x4c\xb7\x3e\x4e\x59\xb6\x99\xeb\xa5\x42\xf6\x71\x3a\x1a\x7d\x1f\x01\x40\x96\xa1\xb6\x41\xd3\x62\x92\xe4\xce\x34\xa9\x23\x6e\x0a\x2e\x29\x40\x19\x05\x47\xaf\x24\xa1\x43\x27\xe8\x0c\xdf\x8f\x93\x81\xeb\xb9\x09\x3d\x24\xc0\xc7\x5d\x4e\xd2\xd3\x7b\x78\xaa\xce\x70\xf9\x84\x0e\x4a\x4d\x72\xb2\x7e\xcf\x7f\x53\xd9\x65\x46\x7b\x92\xf6\x64\xd8\xdf\x40\xea\xe3\x8f\x2f\xa0\x6f\x54\x44\xa5\x30\xed\xd8\x89\x3a\x43\x15\x7d\x91\xae\x6e\xec\x78\x3b\x41\x99\x5f\xa0\x9f\x22\x3d\x7b\x93\x6e\x12\x1f\xe0\x78\x3b\xe5\x66\xaa\xbc\x56\xb1\x7e\x3b\xbe\x78\xff\x84\xb1\x15\xc6\x5a\xdb\x30\x4d\x83\xfc\xc9\xcd\x5f\x17\x67\x7e\x7a\xfe\x55\x7b\xf3\xe6\x4c\x3c\x3e\xfd\x22\x17\x08\xff\xc3\xc2\x07\xfc\xfa\x12\xaf\x03\xa5\x40\x06\xd9\x73\x88\x95\x89\x4e\x9f\xe7\x72\xa8\x4f\xd7\x6c\x0a\x8d\xc6\x9d\xa2\x48\x6f\x25\x57\x30\x7e\x48\xab\xea\xef\x2c\xa9\x74\x12\x2f\xe6\x73\x9c\x8c\x06\x1f\xa1\xf0\x92\x91\x71\xae\x33\x1b\x96\xde\x9d\x69\x4e\xe4\x61\x95\xc4\xa4\xf7\x94\xf7\x24\xe9\xf3\x04\x21\x8d\xe2\xc3\xa0\x98\x68\x95\xf5\xc6\x0d\xda\xa7\x6b\x56\x31\x85\xf5\xdb\xbe\xb7\xbe\xf4\xac\xb9\x42\xbf\x3d\x5f\x9c\xad\xc6\x4f\xe1\xe0\x23\x2e\x7f\xd8\x49\x6f\x79\x0e\xf9\xc7\x70\x8f\x93\xd1\x71\xf4\x4f\x00\x00\x00\xff\xff\x70\xad\x6d\x77\xcd\x05\x00\x00")

func unigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_unigram_tracerJs,
		"unigram_tracer.js",
	)
}

func unigram_tracerJs() (*asset, error) {
	bytes, err := unigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "unigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0x40, 0x4b, 0x25, 0x5e, 0x1a, 0xaa, 0xed, 0xe6, 0xbd, 0x14, 0x79, 0x7a, 0x7f, 0x2a, 0xbc, 0x66, 0x52, 0xd4, 0xd4, 0xf8, 0x9a, 0x32, 0x2a, 0xb3, 0xcc, 0x86, 0x4f, 0xec, 0x1f, 0x45, 0xba}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"4byte_tracer.js":    _4byte_tracerJs,
	"bigram_tracer.js":   bigram_tracerJs,
	"call_tracer.js":     call_tracerJs,
	"evmdis_tracer.js":   evmdis_tracerJs,
	"noop_tracer.js":     noop_tracerJs,
	"opcount_tracer.js":  opcount_tracerJs,
	"prestate_tracer.js": prestate_tracerJs,
	"trigram_tracer.js":  trigram_tracerJs,
	"unigram_tracer.js":  unigram_tracerJs,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"4byte_tracer.js":    {_4byte_tracerJs, map[string]*bintree{}},
	"bigram_tracer.js":   {bigram_tracerJs, map[string]*bintree{}},
	"call_tracer.js":     {call_tracerJs, map[string]*bintree{}},
	"evmdis_tracer.js":   {evmdis_tracerJs, map[string]*bintree{}},
	"noop_tracer.js":     {noop_tracerJs, map[string]*bintree{}},
	"opcount_tracer.js":  {opcount_tracerJs, map[string]*bintree{}},
	"prestate_tracer.js": {prestate_tracerJs, map[string]*bintree{}},
	"trigram_tracer.js":  {trigram_tracerJs, map[string]*bintree{}},
	"unigram_tracer.js":  {unigram_tracerJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
